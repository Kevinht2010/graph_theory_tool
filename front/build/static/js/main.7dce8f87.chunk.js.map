{"version":3,"sources":["logo.svg","display/graphs/Node.js","display/graphs/Edge.js","display/graphs/GraphVisual.js","display/input/InputGraph.js","display/input/Profile.js","display/input/Properties.js","display/input/Inputs.js","display/error/Error.js","display/data/Data.js","display/authtokens/TokenPage.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","position","setPosition","labelX","labelY","useEffect","style","userSelect","onMouseDown","e","dragStart","id","onMouseUp","dragEnd","cx","cy","r","stroke","fill","pointerEvents","textAnchor","transform","fontSize","dist","a","b","Math","sqrt","pow","Edge","c","d","node1","setNode1","node2","setNode2","bendPos","setBendPos","bent","posX","posY","points","A","B","C","angle","acos","K","sin","round","laf","PI","saf","join","calcCirclePath","Fragment","render","GraphVisual","mouseIn","setMouseIn","dragId","setDragId","isDraggingNode","setIsDraggingNode","isDraggingEdge","setIsDraggingEdge","originX","setOriginX","originY","setOriginY","prevPosition","setPrevPosition","node","deletingVertex","type","deleteVertex","clientX","clientY","vertices","bendPositions","get","edges","dragging","newX","newY","updateData","updateBendPositions","newVertices","slice","setVertices","newBendPositions","Map","set","setBendPositions","height","width","backgroundColor","onMouseOver","onMouseLeave","onMouseMove","forEach","edge","push","updateEdges","map","InputGraph","addEdge","v1","v2","test","Number","isInteger","length","key","temp","this","i","valid","errors","neighbor","withRouter","email","setEmail","emailError","setEmailError","sent","setSent","graphSaved","setGraphSaved","graphRetrieved","setGraphRetrieved","failedRetrieve","setFailedRetrieve","modal","authenticate","String","toLowerCase","validateEmail","fetch","method","body","JSON","stringify","headers","then","response","json","msg","exit","setModal","successfullyRetrieved","marginTop","message","showIcon","successfullySaved","unsuccessfulRetrieve","loggedIn","footer","onClick","logOut","top","bodyStyle","minHeight","title","localStorage","getItem","visible","onOk","onCancel","display","justifyContent","marginBottom","flexWrap","margin","fontWeight","Array","from","entries","parse","bp","bentpos","setGraph","getProfile","marginRight","positon","right","name","Item","label","onChange","target","value","getLogin","Algorithms","maxCycle","minCycle","MAX_VALUE","determinant","m","reduce","filter","_","j","G","vertex","visited","v","mx","max","longestPathFromVertex","count","BFS","k","origin","idx","visited2","cycles","getCyclesFromVertex","adjMatrix","getComponents","generateAdjMatrix","D","laplacian","math","pop","spanningTrees","getSpanningTrees","countCycles","minCyc","maxCyc","property","getLongestPath","Properties","setAdjList","dataSource","setDataSource","algoService","aList","makeAdjList","getProperties","columns","dataIndex","pagination","pageSize","Inputs","showProperties","setShowProperties","showInput","setShowInput","editEdge","setEditEdge","setDeleteEdge","setAddEdge","addEdgeValidStatus1","setAddEdgeValidStatus1","addEdgeValidStatus2","setAddEdgeValidStatus2","setV1","setV2","verticesInput","setVerticesInput","vertexMessage","setVertexMessage","setEdges","edgesMessage","setEdgesMessage","profileModal","setProfileModal","addEdges","inputGraph","clearInput","addOrDeleteEdge","bool","success","deleteEdge","left","straightenEdges","centerGraph","bottom","UserOutlined","logIn","addVertices","marginLeft","validateStatus","help","onPressEnter","autoComplete","min","defaultValue","newEdges","split","hasVertexCount","getGraphInput","content","initialValues","remember","getEditEdge","addingVertex","padding","setAddingVertex","setDeletingVertex","getCancel","getDeleteVertex","getAddVertex","Error","Data","updating","setUpdating","edgesMap","bdMap","tryAddVertex","addVertex","x","y","substr1","substr","indexOf","substr2","newKey","newVal","newBendVal","deleteVertexHelper","splice","has","deleteEdgeTest","delete","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","overflow","login","logout","useLocation","pathname","replace","setMessage","status","location","href","search","Routes","setLoggedIn","setItem","exact","path","removeItem","component","to","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dce8f87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react'\n\nexport default function Node(props) {\n    const [position, setPosition] = useState(props.position);\n    \n    const labelX = position[0];\n    const labelY = position[1];\n\n    useEffect(() => {\n        setPosition(props.position);\n    }, [props.position])\n\n    return (\n        <g style={{userSelect:\"none\"}} onMouseDown={e => props.dragStart(e, props.id, true)} onMouseUp={(e) => props.dragEnd(e)}>\n            <circle cx={labelX} cy={labelY} r=\"40\" stroke=\"#2ab863\" stroke-width=\"4\" fill=\"#ccffcf\"/>\n            <text pointerEvents={\"none\"} textAnchor=\"middle\" transform={`translate(${labelX}, ${labelY + 5})`} fontSize=\"20\">{props.id}</text>\n        </g>\n    )\n}","import React, {useState, useEffect} from 'react'\n\nfunction Edge(props) {\n    const [node1, setNode1] = useState(props.node1);\n    const [node2, setNode2] = useState(props.node2);\n    const [bendPos, setBendPos] = useState(props.bendPos);\n\n    let c;\n    let d;\n    \n    if(props.bendPos && node1 && node2) {\n        if(props.bendPos.bent === false) {\n            c = [(node1.posX + node2.posX)/2, (node1.posY + node2.posY)/2];\n            d = \"M \" + node1.posX + \" \" + node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + node2.posX + \" \" + node2.posY;\n        } else {\n            c = [props.bendPos.posX, props.bendPos.posY];\n            d = calcCirclePath([[node2.posX, node2.posY], c, [node1.posX, node1.posY]]);\n        }\n    }\n\n    useEffect(() => {\n        setNode1(props.node1); setNode2(props.node2);\n        setBendPos(props.bendPos);\n    }, [props.node1, props.node2, props.bendPos])\n\n    const render = () => {\n        if(c && d) {\n            return (\n                <svg>\n                    <svg>\n                        <circle onMouseDown={(e) => {props.dragStart(e, props.id, false);}} onMouseUp={(e) => props.dragEnd(e)} cx={c[0]} cy={c[1]} r={6}/>\n                    </svg>\n                    <svg>\n                        <path pointer-events=\"none\" d={d} stroke=\"black\" fill=\"transparent\" stroke-width=\"3\" shape-rendering=\"geometricPrecision\"/>\n                    </svg>\n                </svg>\n            )\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {render()}\n        </React.Fragment>\n    )\n}\n\nfunction calcCirclePath(points){\n    var a = points[0]\n    var b = points[2]\n    var c = points[1]\n  \n    var A = dist(b, c)\n    var B = dist(c, a)\n    var C = dist(a, b)\n  \n    var angle = Math.acos((A*A + B*B - C*C)/(2*A*B))\n  \n    //calc radius of circle\n    var K = .5*A*B*Math.sin(angle)\n    var r = A*B*C/4/K\n    r = Math.round(r*1000)/1000\n  \n    //large arc flag\n    var laf = +(Math.PI/2 > angle)\n  \n    //sweep flag\n    var saf = +((b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) < 0) \n  \n    return ['M', a, 'A', r, r, 0, laf, saf, b].join(' ')\n  }\n  \n  function dist(a, b){\n    return Math.sqrt(\n      Math.pow(a[0] - b[0], 2) +\n      Math.pow(a[1] - b[1], 2))\n  }\n\nexport default Edge\n\n// if(props.bendPos.bent === false) {\n//     c = [(props.node1.posX + props.node2.posX)/2, (props.node1.posY + props.node2.posY)/2];\n//     d = \"M \" + props.node1.posX + \" \" + props.node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + props.node2.posX + \" \" + props.node2.posY;\n// } else {\n//     c = [props.bendPos.posX, props.bendPos.posY];\n//     d = calcCirclePath([[props.node2.posX, props.node2.posY], c, [props.node1.posX, props.node1.posY]]);\n// }\n\n// useEffect(() => {\n//     if(props.bendPos.bent === false) {\n//         c = [(props.node1.posX + props.node2.posX)/2, (props.node1.posY + props.node2.posY)/2];\n//         d = \"M \" + props.node1.posX + \" \" + props.node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + props.node2.posX + \" \" + props.node2.posY;\n//     } else {\n//         c = [props.bendPos.posX, props.bendPos.posY];\n//         d = calcCirclePath([[props.node2.posX, props.node2.posY], c, [props.node1.posX, props.node1.posY]]);\n//     }\n// }, [props.node1, props.node2, props.bendPos])\n","import React, {useState, useEffect, useRef} from 'react';\nimport Node from './Node';\nimport Edge from './Edge';\n\nexport default function GraphVisual(props) {\n    const [mouseIn, setMouseIn] = useState(false);\n    const [dragId, setDragId] = useState();\n    const [isDraggingNode, setIsDraggingNode] = useState(false);\n    const [isDraggingEdge, setIsDraggingEdge] = useState(false);\n\n    const [originX, setOriginX] = useState(0);\n    const [originY, setOriginY] = useState(0);\n    const [prevPosition, setPrevPosition] = useState([]);\n\n    const dragStart = (e, id, node) => {\n        if(mouseIn === true) {\n            if(props.deletingVertex && e.type == 'mousedown') {\n                props.deleteVertex(id);\n                return;\n            }\n            setDragId(id);\n            setOriginX(e.clientX);\n            setOriginY(e.clientY);\n\n            if(node) {\n                setIsDraggingNode(true);\n                setPrevPosition([props.vertices[id].posX, props.vertices[id].posY]);\n            } else {\n                setIsDraggingEdge(true);\n                if(props.bendPositions.get(id).bent === true) {\n                    setPrevPosition([props.bendPositions.get(id).posX, props.bendPositions.get(id).posY]);\n                } else {  \n                    let node1 = props.vertices[props.edges.get(id).node1];\n                    let node2 = props.vertices[props.edges.get(id).node2];\n                    setPrevPosition([(node1.posX + node2.posX) / 2, (node1.posY + node2.posY) / 2]);\n                }\n            }\n        }\n    }\n\n    const dragging = (e) => {\n        if(isDraggingNode && mouseIn) {\n            let newX = e.clientX - originX;\n            let newY =  e.clientY - originY;\n            updateData({\n                \"id\": dragId, \n                \"posX\": prevPosition[0] + newX, \n                \"posY\": prevPosition[1] + newY\n            });\n        } else if(isDraggingEdge && mouseIn) {\n            let newX = e.clientX - originX;\n            let newY =  e.clientY - originY;\n            updateBendPositions({\n                \"id\": dragId, \n                \"posX\": prevPosition[0] + newX, \n                \"posY\": prevPosition[1] + newY,\n                \"bent\": true\n            });\n        }\n    }\n\n    const dragEnd = () => {\n        setIsDraggingNode(false);\n        setIsDraggingEdge(false);\n    }\n\n    const updateData = (a) => {\n        let newVertices = props.vertices.slice(0);\n        newVertices[a.id] = a;\n        props.setVertices(newVertices);\n    }\n\n    const updateBendPositions = (a) => {\n        let newBendPositions = new Map(props.bendPositions.set(a.id, a));\n        props.setBendPositions(newBendPositions);\n    }\n\n    const updateVertices = (a) => {\n        return props.vertices.map(node => {\n            return (<Node dragStart={dragStart} dragEnd={dragEnd} id={node.id} position={[node.posX, node.posY]}/>);\n        })\n    }\n\n    const updateEdges = (a) => {\n        let e = [];\n        props.edges.forEach((edge) => {\n            e.push(<Edge dragStart={dragStart} dragEnd={dragEnd} id={edge.id} node1={props.vertices[edge.node1]} \n                    node2={props.vertices[edge.node2]} bendPos={props.bendPositions.get(edge.id)}/>)\n        })\n        return e;\n    }\n\n    useEffect(() => {}, [props.vertices, props.bendPositions, props.bendPositions, props.edges, props.vertices])\n\n    return (\n        <svg style={{height:\"600vh\", width:\"600vw\", backgroundColor: '#dbedff'}} \n            onMouseOver={() => {setMouseIn(true)}} onMouseLeave={(e) => {dragging(e); setMouseIn(false); dragEnd()}}\n            onMouseMove={(e) => {dragging(e)}} onMouseUp={() => dragEnd()}>\n            {updateEdges()}\n            {updateVertices()}\n        </svg>\n    )\n}\n\n","export default class InputGraph {\n    constructor(vertices, edges) {\n        this.vertices = [];\n        for(let i = 0; i < vertices; ++i) {\n            this.vertices.push({\"id\": i, \"posX\": 500, \"posY\": 500});\n        }\n\n        this.edges = new Map;\n        this.bendPositions = new Map;\n        this.valid = true;\n        this.errors = [];\n        for(let i = 0; i < edges.length; ++i) {\n            this.errors.push(\"none\");\n            for(let neighbor of edges[i]) {\n                if(!this.addEdge(i, neighbor)) {\n                    this.valid = false;\n                    this.errors[i] = (\"error\");\n                    break;\n                } else if (neighbor === \"\") {\n                    this.errors[i] = (\"error\");\n                }\n            }\n        }\n    }\n\n    addEdge = (v1, v2) => {\n        if(!(/^\\d+$/.test(v1)) || !(/^\\d+$/.test(v2))) {\n            return false;\n        }\n\n        v1 = Number(v1);\n        v2 = Number(v2);\n        if(!(Number.isInteger(v1)) || v1 > this.vertices.length - 1) {\n            return false;\n        }\n        if(!(Number.isInteger(v2)) || v2 > this.vertices.length - 1) {\n            return false;\n        }\n\n        if(v1 == v2) {\n            return false;\n        }\n        \n        let key;\n        if(v2 > v1) {\n            let temp = v1;\n            v1 = v2;\n            v2 = temp;\n        }\n\n        key = v1 + \".\" + v2;\n        \n        this.edges.set(key, {\n            \"id\": key,\n            \"node1\": v1,\n            \"node2\": v2,\n            \"bent\": false,\n            \"posX\": null,\n            \"posY\": null\n        });\n\n\n        this.bendPositions.set(key, {\n            \"id\": key,\n            \"bent\": false,\n            \"posX\": null,\n            \"posY\": null\n        });\n\n        return true;\n    }\n\n}","import React, {useEffect, useState} from 'react'\nimport { Alert, Button, Modal, Input, Form, InputNumber } from 'antd';\nimport { useLocation, withRouter } from 'react-router-dom'\nimport axios from 'axios';\n\nfunction Profile(props) {\n    const [email, setEmail] = useState();\n    const [emailError, setEmailError] = useState(false);\n    const [sent, setSent] = useState(false);\n    const [graphSaved, setGraphSaved] = useState(false);\n    const [graphRetrieved, setGraphRetrieved] = useState(false);\n    const [failedRetrieve, setFailedRetrieve] = useState(false);\n \n    useEffect(() => {}, [props.modal]);\n\n    function validateEmail(email) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const authenticate = (email) => {\n        if(validateEmail(email)) {\n            fetch('https://graphtt.herokuapp.com/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'email': email, // change here\n                    'route': \"https://graph-tool.netlify.app/#/\"\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => setSent(true))\n        } else {\n            setEmailError(true);\n        }\n    }\n\n    const getGraph = () => {\n        if(props.loggedIn == true) {\n            fetch('https://graphtt.herokuapp.com/api/retrieve', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'type': \"retrieve\",\n                    'email': localStorage.getItem(\"email\")\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => {setGraphRetrieved(true)\n                let e = new Map(JSON.parse(msg.edges));\n                let bp = new Map(JSON.parse(msg.bentpos));\n                props.setGraph(e, JSON.parse(msg.vertices), bp);\n            })\n        }\n    }\n\n    const saveGraph = () => {\n        if(props.loggedIn == true) {\n            fetch('https://graphtt.herokuapp.com/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'type': \"upload\",\n                    'email': localStorage.getItem(\"email\"),\n                    'edges': JSON.stringify(Array.from(props.edges.entries())),\n                    'vertices': JSON.stringify(props.vertices),\n                    'bentpos': JSON.stringify(Array.from(props.bendPositions.entries()))\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => {setGraphSaved(true)})\n        }\n    }\n\n    const exit = () => {\n        props.setModal(false); setEmailError(false); setSent(false); setGraphRetrieved(false); setGraphSaved(false); setFailedRetrieve(false);\n    }\n\n    const getProfile = () => {\n        let footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {exit()}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" key=\"back\" onClick={() => {exit(); props.logOut()}}>\n                    Log out\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"120px\"}} title={\"Logged into \" + localStorage.getItem(\"email\")} visible={props.modal} \n                    onOk={() => {exit()}} onCancel={() => {exit()}}\n                    footer={footer}>\n                <div style={{display:'flex', width:\"100%\", justifyContent:\"center\", marginBottom:\"5px\", marginTop:\"-15px\", flexWrap:\"wrap\"}}>\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Save current graph:</div>\n                        <Button type=\"primary\" onClick={() => {saveGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\n                            Save Graph\n                        </Button>\n                    </div>\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Retrieve saved graph:</div>\n                        <Button type=\"primary\" onClick={() => {getGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\n                            Retrieve Graph\n                        </Button>\n                    </div>\n                    <div style={{marginTop:\"45px\", marginBottom:\"-15px\"}}>(Currently this feature is limited to 1 graph per user)</div>\n                </div>\n                {graphSaved ? successfullySaved() : <React.Fragment/>}\n                {graphRetrieved ? successfullyRetrieved() : <React.Fragment/>}\n                {failedRetrieve ? unsuccessfulRetrieve() : <React.Fragment/>}\n            </Modal>\n        )\n    }\n\n    const sentMessage = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\n                    <Alert message={\"Email successfully sent to \" + email} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const emailErrorMessage = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\n                    <Alert message=\"Invalid Email\" type=\"error\" showIcon />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const successfullyRetrieved = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message={\"Graph successfully retrieved\"} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const successfullySaved = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message={\"Graph successfully saved\"} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const unsuccessfulRetrieve = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message=\"No graph to retrieve. Save a graph first!\" type=\"error\" showIcon />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const getLogin = () => {\n        let footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {exit()}} style={{marginTop:\"10px\", marginBottom:\"10px\", marginRight:\"47.5%\"}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" key=\"back\" onClick={() => {authenticate(email)}} style={{positon:\"absolute\", right: \"10px\"}}>\n                    Send Confirmation Email\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"100px\"}} title=\"Log In To Save Graphs\" visible={props.modal} \n                    onOk={() => {exit()}} onCancel={() => {exit()}}\n                    footer={footer} onClick={() => setEmailError(false)}>\n                <div onClick={() => {setEmailError(false);}}>\n                <Form name=\"basic\" style={{height:\"30px\"}}>\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                    >\n                        <Input onChange={(e) => {setEmail(e.target.value)}}/>\n                    </Form.Item>\n                </Form>\n                {sent ? sentMessage() : <React.Fragment/>}\n                {emailError ? emailErrorMessage() : <React.Fragment/>}\n                </div>\n            </Modal>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {props.loggedIn == true ?  getProfile() : getLogin()}\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(Profile)\n","import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport { Table } from 'antd';\nimport * as math from 'mathjs'\n\nclass Algorithms {\n    maxCycle = 0;\n    minCycle = Number.MAX_VALUE;\n\n    // edges = [\n    //     [1,2,3,4],\n    //     [0,2,3,4],\n    //     [0,1,3,4],\n    //     [0,1,2,4],\n    //     [0,1,2,3],\n    //     [6,7,8,9],\n    //     [5,7,8,9],\n    //     [5,6,8,9],\n    //     [5,6,7,9],\n    //     [5,6,7,8],\n    //     [11,12],\n    //     [10,12],\n    //     [10,11],\n    // ]\n    \n    // edges2 = [\n    //     [1,2,3],\n    //     [0,2,3],\n    //     [0,1,3],\n    //     [0,1,2]\n    // ]\n    \n    BFS(G, vertex, visited) {\n        let vertices = [vertex];\n        visited[vertex] = 1;\n    \n        while(vertices.length > 0) {\n            let newVertices = [];\n            for(let v of vertices) {\n                for(let i = 0; i < G[v].length; ++i) {\n                    if(visited[G[v][i]] != 1) {\n                        ++visited[G[v][i]];\n                        newVertices.push(G[v][i]);\n                    }\n                }\n            }\n            vertices = newVertices;\n        }\n    }\n    \n    longestPathFromVertex(G, vertex, visited) {\n        let mx = 0;\n        visited[vertex] = 1;\n        for(let v of G[vertex]) {\n            if(visited[v] != 1) {\n                mx = Math.max(mx, 1 + this.longestPathFromVertex(G, v, visited));\n            }\n        }\n    \n        return mx;\n    }\n    \n    getComponents(G) {\n        let count = 0;\n        let visited = new Array(G.length).fill(0)\n        for(let i = 0; i < G.length; ++i) {\n            if(visited[i] == 0) {\n                ++count;\n                this.BFS(G, i, visited);\n            }\n        }\n    \n        return count;\n    }\n    \n    getLongestPath(G) {\n        let mx = 0;\n        for(let k = 0; k < G.length; ++k) {\n            mx = Math.max(this.longestPathFromVertex(G, k, new Array(G.length).fill(0)), mx);\n        }\n    \n        return mx;\n    }\n    \n    getCyclesFromVertex(G, vertex, visited, origin, idx, visited2) {\n        let cycles = 0;\n        visited[vertex] = 1;\n        for(let v of G[vertex]) {\n            if(visited2[v] == 0) {\n                if(v == origin && idx >= 2) {\n                    ++cycles;\n                    if(idx > this.maxCycle) {\n                        this.maxCycle = idx;\n                    }\n                    if(idx < this.minCycle) {\n                        this.minCycle = idx;\n                    }\n                } else if(visited[v] == 0) {\n                    cycles += this.getCyclesFromVertex(G, v, visited, origin, idx+1, visited2);\n                }\n            }\n        }\n        visited[vertex] = 0;\n        return cycles;\n    }\n    \n    generateAdjMatrix(G) {\n        let adjMatrix = new Array(G.length);\n        for(let i = 0; i < G.length; ++i) {\n            adjMatrix[i] = new Array(G.length).fill(0);\n        }\n    \n        for(let i = 0; i < G.length; ++i) {\n            for(let j = 0; j < G[i].length; ++j) {\n                adjMatrix[i][G[i][j]] = 1;\n            }\n        }\n        return adjMatrix;\n    }\n\n    determinant = m => \n        m.length == 1 ?\n        m[0][0] :\n        m.length == 2 ? \n        m[0][0]*m[1][1]-m[0][1]*m[1][0] :\n        m[0].reduce((r,e,i) => \n            r+(-1)**(i+2)*e*this.determinant(m.slice(1).map(c => \n            c.filter((_,j) => i != j))),0)\n    \n    getSpanningTrees(G) {\n        if(this.getComponents(G) != 1) {\n            return 0;\n        }\n    \n        let adjMatrix = this.generateAdjMatrix(G);\n        let D = new Array(G.length);\n        for(let i = 0; i < G.length; ++i) {\n            D[i] = new Array(G.length).fill(0);\n        } \n        for(let i = 0; i < G.length; ++i) {\n            D[i][i] = G[i].length;\n        }\n\n        let laplacian = math.subtract(D, adjMatrix);\n        laplacian.pop();\n\n        for(let i = 0; i < G.length-1; ++i) {\n            laplacian[i].pop();\n        }\n\n        return this.determinant(laplacian);\n    }\n    \n    countCycles(G) {\n        let visited2 = new Array(G.length).fill(0);\n        let cycles = 0;\n        for(let i = 0; i < G.length; ++i) {\n            cycles += this.getCyclesFromVertex(G, i, new Array(G.length).fill(0), i, 0, visited2) / 2;\n            visited2[i] = 1;\n        }\n    \n        return cycles;\n    }\n\n    getProperties(G) {\n        let spanningTrees = this.getSpanningTrees(G);\n        let cycles = this.countCycles(G);\n        let minCyc = this.minCycle;\n        let maxCyc = this.maxCycle;\n        let longestPath = this.getLongestPath(G);\n        let components = this.getComponents(G);\n    \n        let properties = [\n            {\n                key: '1',\n                property:'Longest Path',\n                value: longestPath\n            },\n            {\n                key: '2',\n                property: 'Number of Components',\n                value: components\n            },\n            {\n                key: '3',\n                property: 'Spanning Trees',\n                value: spanningTrees\n            },\n            {\n                key: '4',\n                property:'Number of Cycles',\n                value: cycles\n            },\n            {\n                key: '5',\n                property:'Shortest Cycle',\n                value: minCyc == Number.MAX_VALUE ? \"Null\" : minCyc\n            },\n            {\n                key: '6',\n                property:'Longest Cycle',\n                value: maxCyc == 0 ? \"Null\" : maxCyc\n            }\n        ]\n    \n        return properties;\n    }\n}\n\nexport default function Properties(props) {\n    const [vertices, setVertices] = useState(0);\n    const [adjList, setAdjList] = useState();\n    const [adjMatrix, setAdjMatrix] = useState();\n    const [dataSource, setDataSource] = useState();\n    const algoService = new Algorithms();\n    \n    let columns = [\n        {\n            title: 'Property',\n            dataIndex: 'property',\n            key: 'name',\n            width: 250\n        },\n        {\n            title: 'Value',\n            dataIndex: 'value',\n            key: 'val',\n            width: 120\n        },\n    ];\n\n    const makeAdjList = (v, edges) => {\n        let aList = new Array(v);\n        for(let i = 0; i < v; ++i) {\n            aList[i] = new Array();\n        }\n\n        edges.forEach((value, key) => {\n            aList[value.node1].push(value.node2);\n            aList[value.node2].push(value.node1);\n        })\n\n        setAdjList(aList);\n        return(aList);\n    }\n\n    useEffect(() => {\n        let edges = makeAdjList(props.vertices.length, props.edges);\n        setDataSource(algoService.getProperties(edges));\n    }, [props.vertices, props.edges])\n\n    return (\n        <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 3 }}/>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport InputGraph from './InputGraph'\nimport { Button, Modal, Checkbox, Input, Form, InputNumber, Alert } from 'antd';\nimport { UserOutlined } from '@ant-design/icons'\nimport Profile from './Profile.js'\nimport Properties from './Properties';\n\n\n// Will Refactor Soon\n\n\n\nexport default function Inputs(props) {\n    const [showProperties, setShowProperties] = useState(false);\n    const [showInput, setShowInput] = useState(false);\n    const [properties, setProperties] = useState([{\"id\": \"cycles\", \"value\": \"5\"}]);\n\n    const [editEdge, setEditEdge] = useState(false);\n    const [deleteEdge, setDeleteEdge] = useState(false);\n    const [addEdge, setAddEdge] = useState(false);\n    const [addEdgeValidStatus1, setAddEdgeValidStatus1] = useState(\"none\");\n    const [addEdgeValidStatus2, setAddEdgeValidStatus2] = useState(\"none\");\n\n    const [v1, setV1] = useState(\"\");\n    const [v2, setV2] = useState(\"\");\n\n    const [verticesInput, setVerticesInput] = useState(1);\n    const [vertices, setVertices] = useState(0);\n    const [vertexMessage, setVertexMessage] = useState();\n    const [edges, setEdges] = useState();\n    const [edgesMessage, setEdgesMessage] = useState();\n\n    const [profileModal, setProfileModal] = useState(false);\n\n    const addVertices = () => {\n        setVertices(verticesInput);\n        let k = Array(verticesInput);\n        k.fill([]);\n        setEdges(k);\n        let m = Array(verticesInput);\n        m.fill(\"none\")\n        setEdgesMessage(m);\n    }\n\n    const addEdges = () => {\n        let inputGraph = new InputGraph(vertices, edges);\n        if(inputGraph.valid === true) {\n            props.setGraph(inputGraph.edges, inputGraph.vertices, inputGraph.bendPositions, true);\n            clearInput();\n        } else {\n            setEdgesMessage(inputGraph.errors);\n        }\n    }\n\n    const clearInput = () => {\n        setVertices(0);\n        setShowInput(false); \n        setVertexMessage(\"none\");\n        setEdges();\n        setEdgesMessage();\n    }\n\n    const getGraphInput = () => {\n        const footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {clearInput()}}>\n                    Cancel\n                </Button>\n                <Button type=\"primary\" onClick={() => {\n                        vertices === 0 ? addVertices() : addEdges();\n                    }\n                }>\n                    {vertices === 0 ? \"Continue\" : \"Input Graph\"}\n                </Button>\n            </React.Fragment>\n        )\n\n        const hasVertexCount = () => {\n            if(vertices === 0) {\n                return (\n                    <Form.Item\n                        label=\"Number of Vertices (Max 14)\"\n                        name=\"v1\"\n                        validateStatus={addEdgeValidStatus1}\n                        help={vertexMessage === \"error\" ? \"Invalid Input\" : null}\n                    >\n                        <InputNumber onPressEnter={(e) => {setVertices(verticesInput)}} autoComplete=\"off\" onChange={(value) => setVerticesInput(value)} \n                                    min={1} max={14} defaultValue={1}/>\n                    </Form.Item>\n                )\n            } else {\n                let k = [];\n                for(let i = 0; i < vertices; ++i) {\n                    k.push(\n                        <Form.Item\n                            validateStatus={edgesMessage[i]}\n                            help={edgesMessage[i] === \"error\" ? \"Invalid Input\" : null}\n                            label={JSON.stringify(i)}\n                        >\n                            <Input defaultValue=\"\" style={{width:\"70px\", margin:\"2px\"}} onPressEnter={(e) => {addEdges()}} autoComplete=\"off\" onChange={(e) => \n                                    {let newEdges = [...edges]; newEdges[i] = (e.target.value).split(\" \").join(\"\").split(\",\"); setEdges(newEdges);}} />\n                        </Form.Item>\n                    )\n                }\n                return (\n                    <React.Fragment>\n                        <div style={{marginTop:\"-15px\", marginBottom:\"35px\"}}>Edges (adjacency list, seperating neighbors of each vertex with commas)</div>\n                        <div style={{display:\"flex\", width:\"350px\", marginLeft:\"auto\", marginRight:\"auto\", flexWrap:\"wrap\", justifyContent:\"space-around\"}}>\n                            {k}\n                        </div>\n                    </React.Fragment>\n                )\n            }\n        }\n\n        return (\n            <Modal style={{top: \"10%\"}} title=\"Input Graph\" visible={showInput} onCancel={() => {clearInput()}} footer={footer}>\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\n                    <Form\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\")}}\n                        >\n                        {hasVertexCount()}\n                    </Form>\n                 </div>\n            </Modal>\n        )\n    }\n\n    const getProperties = () => {\n        let content;\n        let footer;\n\n        content = (\n            <React.Fragment>\n                <Properties vertices={props.vertices} edges={props.edges}/>\n                <Alert message=\"Some feature are still in progress (number of spanning forests, planarity, etc.) - please check back in a few days!\" type=\"warning\" showIcon  />\n            </React.Fragment>\n        )\n\n        footer = (\n            <React.Fragment>\n                <Button key=\"submit\" type=\"primary\" onClick={() => {setShowProperties(false)}}>\n                    Return\n                </Button>\n            </React.Fragment>\n        )\n        \n        return (\n            <Modal style={{top: \"15%\"}} width={\"600px\"} bodyStyle={{minHeight:\"200px\"}} title=\"Graph Properties\" visible={showProperties} onOk={() => {setShowProperties(false)}} onCancel={() => {setShowProperties(false)}}\n                    footer={footer}>\n                {content}\n            </Modal>\n        )\n    }\n\n    const addOrDeleteEdge = (bool) => {\n        if(v1 !== \"\" && v2 !== \"\") {\n            let success;\n            if(bool) {\n                success = props.addEdge(v1, v2);\n            } else {\n                success = props.deleteEdge(v1, v2);\n            }\n            setAddEdgeValidStatus1(success[0]);\n            setAddEdgeValidStatus2(success[1]);\n            return success;\n        } else {\n            let k = [];\n            if(v1 === \"\") {\n                k.push(\"error\")\n            } else {\n                k.push(\"none\")\n            }\n\n            if(v2 === \"\") {\n                k.push(\"error\")\n            } else {\n                k.push(\"none\");\n            }\n            setAddEdgeValidStatus1(k[0]);\n            setAddEdgeValidStatus2(k[1]);\n            return k;\n        }\n    }\n\n    const getEditEdge = () => {\n        const footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false)}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" onClick={() => {\n                        addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)\n                    }\n                }>\n                    {addEdge ? \"Add Edge\" : \"Delete Edge\"}\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"25%\"}} title={addEdge ? \"Add Edge\" : \"Delete Edge\"} visible={editEdge} onCancel={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false);\n                    setAddEdgeValidStatus1(\"none\"); setAddEdgeValidStatus2(\"none\")}} footer={footer}>\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\n                    <Form\n                        initialValues={{ remember: true }}\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\");\n                        setAddEdgeValidStatus2(\"none\")}}\n                        >\n                        <Form.Item\n                            label=\"Vertex 1\"\n                            name=\"v1\"\n                            validateStatus={addEdgeValidStatus1}\n                            help={addEdgeValidStatus1 === \"error\" ? \"Invalid Input\" : null}\n                        >\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV1(e.target.value)} />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={addEdgeValidStatus2}\n                            help={addEdgeValidStatus2 === \"error\" ? \"Invalid Input\" : null}\n                            label=\"Vertex 2\"\n                            name=\"v2\"\n                        >\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV2(e.target.value)} />\n                        </Form.Item>\n                    </Form>\n                 </div>\n            </Modal>\n        )\n    }\n\n    const getCancel = () => {\n        if(props.addingVertex || props.deletingVertex) {\n            return (\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                        onClick={() => {props.setAddingVertex(false); props.setDeletingVertex(false);}}>\n                    Cancel\n                </Button>\n            )\n        }\n    }\n\n    const getAddVertex = () => {\n        if(props.addingVertex) {\n            return (\n                <Alert style={{position: 'absolute', right:\"103%\", bottom:\"3.5%\", width: \"355px\"}} \n                    message=\"Click anywhere to add a vertex! (Max 20 vertices)\" type=\"success\" showIcon />\n            )\n        }\n    }\n\n    const getDeleteVertex = () => {\n        if(props.deletingVertex) {\n            return (\n                <Alert style={{position: 'absolute', right:\"103%\", bottom:\"3.5%\", width: \"250px\"}} \n                    message=\"Click a vertex to delete it!\" type=\"error\" showIcon />\n            )\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{position:\"absolute\", display:\"flex\", marginTop:\"45px\", left:\"calc(15px + 3.5%)\"}} >\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowInput(true)}>Input Graph</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => {props.straightenEdges()}}>Straighten Edges</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowProperties(true)}>Graph Properties</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => props.centerGraph()}>Center Graph</Button>\n            </div>\n            <div style={{position:\"absolute\", left:\"calc(15px + 3.75%)\", bottom:\"calc(6vh + 15px)\"}}>\n                <Button style={{width:\"55px\", height:\"45px\"}} type=\"primary\" onClick={() => setProfileModal(true)}>\n                    <UserOutlined/>\n                </Button>\n            </div>\n            <Profile modal={profileModal} setModal={setProfileModal} loggedIn={props.loggedIn} logIn={props.logIn} logOut={props.logOut}\n                    edges={props.edges} vertices={props.vertices} bendPositions={props.bendPositions} setGraph={props.setGraph}\n                    />\n            {getGraphInput()}\n            {getProperties()}\n            {getEditEdge()}\n            <div style={{position:\"absolute\", display:\"flex\", right:\"3%\", bottom:\"6%\", flexWrap:\"wrap\", width:\"125px\"}}>\n                {getCancel()}\n                {getDeleteVertex()}\n                {getAddVertex()}\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                        onClick={() => {setDeleteEdge(true); setEditEdge(true);}}>\n                    Delete Edge\n                </Button>\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                        onClick={() => {props.setAddingVertex(false); props.setDeletingVertex(true)}}>\n                    Delete Node\n                </Button>\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                    onClick={() => {setAddEdge(true); setEditEdge(true)}}>\n                    Add Edge\n                </Button>\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                    onClick={() => {props.setDeletingVertex(false); props.setAddingVertex(true)}}>\n                    Add Node\n                </Button>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\nimport {Alert} from 'antd'\n\nexport default function Error() {\n    return (\n        <div style={{width:\"100%\", height:\"100%\"}}>\n            <Alert message=\"Mobile view is still under construction! Please check in later (for now, please use the app on pc view - apologies for any inconveniences)\" type=\"warning\" showIcon  />\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport Inputs from '../../display/input/Inputs.js'\nimport GraphVisual from '../graphs/GraphVisual.js'\nimport Error from '../error/Error.js'\nimport { Alert } from 'antd'\n\nexport default function Data(props) {\n    let tvertices = [{\n        \"id\": 0,\n        \"posX\": 850,\n        \"posY\": 200\n    }, {\n        \"id\": 1,\n        \"posX\": 1150,\n        \"posY\": 400\n    }, {\n        \"id\": 2,\n        \"posX\": 550,\n        \"posY\": 400\n    }, {\n        \"id\": 3,\n        \"posX\": 1050,\n        \"posY\": 720\n    }, {\n        \"id\": 4,\n        \"posX\": 650,\n        \"posY\": 720\n    }]\n\n    const [updating, setUpdating] = useState(false);\n    const [vertices, setVertices] = useState(null)\n\n    const edgesArray = [{\n        \"id\": \"0.1\",\n        \"node1\": 0,\n        \"node2\": 1,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.2\",\n        \"node1\": 1,\n        \"node2\": 2,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.3\",\n        \"node1\": 1,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.2\",\n        \"node1\": 0,\n        \"node2\": 2,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.3\",\n        \"node1\": 0,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"2.3\",\n        \"node1\": 2,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.4\",\n        \"node1\": 0,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.4\",\n        \"node1\": 1,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"2.4\",\n        \"node1\": 2,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"3.4\",\n        \"node1\": 3,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }]\n\n    let edgesMap = new Map();\n    let bdMap = new Map();\n\n    edgesArray.forEach(edge => {\n        edgesMap.set(edge.node1 + \".\" + edge.node2, edge);\n        bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":edge.bent, \"posX\": edge.posX, \"posY\":edge.posY});\n    })\n\n    const [edges, setEdges] = useState(null);\n    const [addingVertex, setAddingVertex] = useState(false);\n    const [deletingVertex, setDeletingVertex] = useState(false);\n    const [bendPositions, setBendPositions] = useState(null);\n\n    const setGraph = (edges, vertices, bp, bl = false) => {\n        setUpdating(true);\n        setVertices(vertices);\n        setEdges(edges);\n        setBendPositions(bp);\n    }\n\n    if(vertices === null) {\n        setGraph(edgesMap, tvertices, bdMap)\n    }\n\n    const tryAddVertex = (e) => {\n        if(e.type == 'click') {\n            if(addingVertex && vertices.length <= 13) {\n                addVertex(e.clientX - 55, e.clientY - 13)\n            }\n            setAddingVertex(false);\n        } else {\n            setAddingVertex(false);\n        }\n    }\n\n    const addVertex = (x, y) => {\n        vertices.push({\"id\": vertices.length, \"posX\": x, \"posY\":y});\n    }\n\n    const straightenEdges = () => {\n        edges.forEach(edge => {\n            bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":false, \"posX\": 0, \"posY\": 0});\n        })\n\n        setBendPositions(bdMap);\n    }\n\n    const deleteVertex = (idx) => {\n        let newEdges = new Map();\n        let newBendPositions = new Map();\n        edges.forEach((v) => {\n            let key = v.id;\n            let substr1 = Number(key.substr(0, key.indexOf('.')));\n            let substr2 = Number(key.substr(key.indexOf('.') + 1, key.length - 1));\n\n            if(substr1 !== idx && substr2 !== idx) {\n                if(substr1> idx) --substr1;\n                if(substr2 > idx) --substr2;\n\n                let newKey = substr1 + \".\" + substr2;\n                let newVal = v;\n                newVal[\"id\"] = newKey;\n                newVal[\"node1\"] = substr1;\n                newVal[\"node2\"] = substr2;\n                let newBendVal = bendPositions.get(key);\n                newBendVal[\"id\"] = newKey;\n\n                newEdges.set(substr1 + \".\" + substr2, newVal);\n                newBendPositions.set(substr1 + \".\" + substr2, newBendVal);\n            }\n        })\n        setEdges(newEdges);\n        setBendPositions(newBendPositions);\n        setDeletingVertex(false);\n        deleteVertexHelper(idx)\n    }\n\n    const deleteVertexHelper = (idx) => {\n        let k = vertices;\n        k.splice(idx, 1);\n        for(let i = idx; i < k.length; ++i) {\n            --k[i].id;\n        }\n        setVertices(k);\n    }\n\n    const deleteEdge = (key) => {\n        let k = new Map(edges);\n        k.delete(key);\n        let b = new Map(bendPositions);\n        b.delete(key);\n        setEdges(k);\n        setBendPositions(b);\n    }\n\n    const addEdge = (v1, v2) => {\n        let valid = [\"none\", \"none\"];\n        v1 = Number(v1);\n        v2 = Number(v2);\n        if(v1 > v2) {\n            let temp = v1;\n            v1 = v2;\n            v2 = temp;\n        }\n\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) {\n            valid[0] = (\"error\");\n        }\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) {\n            valid[1] = \"error\";\n        }\n        if(v1 === v2) {\n            valid[0] = \"error\";\n            valid[1] = \"error\";\n        }\n        if(valid[0] === \"error\" || valid[1] === \"error\") {\n            return valid;\n        }\n        let key;\n        if(v1 > v2) {\n            key = v2 + \".\" + v1;\n        } else {\n            key = v1 + \".\" + v2;\n        }\n        if(edges.has(key)) {\n            return [\"error\", \"error\"]\n        } else {\n            setEdges(new Map(edges.set(key, {\n                \"id\": key,\n                \"node1\": v1,\n                \"node2\": v2,\n                \"bent\": false,\n                \"posX\": null,\n                \"posY\": null\n            })));\n\n\n            setBendPositions(new Map(bendPositions.set(key, {\n                \"id\": key,\n                \"bent\": false,\n                \"posX\": null,\n                \"posY\": null\n            })));\n\n            return [\"success\", \"success\"];\n        }\n    }\n\n    const deleteEdgeTest = (v1, v2) => {\n        let valid = [\"none\", \"none\"];\n        v1 = Number(v1);\n        v2 = Number(v2);\n\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) valid[0] = (\"error\");\n        \n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) valid[1] = \"error\";\n        \n        if(v1 === v2) {\n            valid[0] = \"error\";\n            valid[1] = \"error\";\n        }\n\n        if(valid[0] === \"error\" || valid[1] === \"error\") return valid;\n        let key;\n\n        if(v1 > v2) {\n            key = v2 + \".\" + v1;\n        } else {\n            key = v1 + \".\" + v2;\n        }\n        if(!edges.has(key)) {\n            return [\"error\", \"error\"]\n        } else {\n            deleteEdge(key);\n            return [\"success\", \"success\"];\n        }\n    }\n\n    const centerGraph = () => {\n        let newVertices = [];\n        let i = 0;\n        let k = vertices.length;\n        vertices.forEach(vertex => {\n            if(i > k / 2) {\n                vertex.posX = 500 + (i-k/2)*50;\n                vertex.posY = 320 + 200;\n            } else {\n                vertex.posX = 500 + i*50;\n                vertex.posY = 320;\n            }\n            ++i;\n            newVertices.push(vertex);\n        })\n\n        setVertices(newVertices);\n        straightenEdges();\n    }\n\n    const [width, setWidth] = useState(window.innerWidth)\n\n    useEffect(() => {\n        if(updating) setUpdating(false);\n\n        const handleResize = () => setWidth(window.innerWidth);\n        window.addEventListener(\"resize\", handleResize);\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    \n    \n    }, [edges, bendPositions, window.innerWidth])\n\n    const getReturn = () => {\n        if(window.innerWidth > \"670\") {\n            return (\n                <div style={{overflow:\"auto\"}}>\n                    <Inputs setAddingVertex={setAddingVertex} straightenEdges={straightenEdges} addEdge={addEdge} setDeletingVertex={setDeletingVertex} deleteEdge={deleteEdgeTest}\n                                setGraph={setGraph} edges={edges} vertices={vertices} bendPositions={bendPositions}\n                                logIn={props.login} logOut={props.logout} loggedIn={props.loggedIn} centerGraph={centerGraph}\n                                addingVertex={addingVertex} deletingVertex={deletingVertex}\n                        />\n                    <div style={{display:\"flex\", height: '92vh', width:'94vw', marginLeft:\"3vw\", marginRight:\"3vw\", marginTop:\"3vh\", marginBottom:\"2.75vh\", overflow:\"hidden\"}} \n                        onClick={(e) => {tryAddVertex(e); setAddingVertex(false)}}>\n                        \n                        {updating ? <React.Fragment/> : <GraphVisual vertices={vertices} edges={edges} bendPositions={bendPositions} setVertices={setVertices} deletingVertex={deletingVertex}\n                                    setBendPositions={setBendPositions} onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}} deleteVertex={deleteVertex}/> }\n                    </div>\n                </div>\n            )\n        } else {\n            return <Error />\n        }\n    }\n        \n    return (\n        <React.Fragment>\n            {getReturn()}\n        </React.Fragment>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {useLocation, withRouter} from 'react-router-dom';\n\nfunction TokenPage(props) {\n    const [id, setID] = useState((useLocation().pathname).replace(\"/confirm_email/\", \"\"));\n    const [message, setMessage] = useState(\"Temp\");\n    const submit = (e) => {\n        fetch('https://graphtt.herokuapp.com/confirm_email/' + id, {\n            method: 'POST',\n            body: JSON.stringify({\n                'token': id // change here\n            }),\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        }).then(response => response.json()).then(msg => login(msg))\n    }\n\n    const login = (msg) => {\n        setMessage(msg);\n\n        if(msg.status === \"Accepted\") {\n            props.login(msg.email);\n            let k = window.location.href;\n            let m = k.search(\"/confirm_email\");\n            window.location.replace(k.substr(0,m));\n        }\n    }\n\n    useEffect(() => {\n        if(props.loggedIn === true) {\n            let k = window.location.href;\n            let m = k.search(\"/confirm_email\");\n            window.location.replace(k.substr(0,m));\n        } else {\n            submit();\n        }\n    }, [])\n\n    return (\n        <h1>\n            {message.status}\n        </h1>\n    )\n}\n\nexport default withRouter(TokenPage)\n","import React, {useState, useEffect} from 'react';\nimport { Switch, HashRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Data from '../display/data/Data';\nimport TokenPage from '../display/authtokens/TokenPage';\n\nexport default function Routes() {\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n\n  const login = (email) => {\n    localStorage.setItem(\"loggedIn\", true);\n    localStorage.setItem(\"email\", email);\n    setLoggedIn(true);\n  }\n\n  const logOut = () => {\n    localStorage.setItem(\"loggedIn\", false);\n    localStorage.removeItem(\"email\");\n    setLoggedIn(false);\n  }\n\n  useEffect(() => {\n    if(localStorage.getItem(\"loggedIn\") == \"true\") {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  \n  }, []);\n\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\"><Data loggedIn={loggedIn} login={login} logout={logOut}/></Route>\n          <Route exact path=\"/confirm_email/:token\" component={() => <TokenPage loggedIn={loggedIn} login={login}/>}/>\n          <Route path='/'><Redirect to='/'/></Route>\n        </Switch>\n      </Router>\n  )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Graph from './logic/graph/Graph'\nimport GraphVisual from './display/graphs/GraphVisual'\nimport { useEffect, useState } from 'react'\nimport { BFSCycle, BFSNoRepeat, BFSRepeat } from './logic/algorithms/BFS'\nimport Components from './logic/algorithms/Components'\nimport 'antd/dist/antd.css';\nimport Routes from './routing/Routes'\nimport { Helmet } from 'react-helmet'\n\nfunction App() {\n  useEffect(() => {\n    \n  })\n  return (\n    <React.Fragment>\n      <Helmet>\n          <title>Graph Theory Tool</title>\n        </Helmet>\n      <Routes/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n/*     let adj = [[0,1,0,1], [1,0,1,1], [0,1,0,1], [1,1,1,0]];\n    let graph = new Graph(adj);\n    let vertices = BFSCycle(graph, 0);\n\n    let k = new Components(graph);\n    console.log(k.getComponents());\n    console.log(k.getComponentCount()); */\n    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}