{"version":3,"sources":["logo.svg","display/graphs/Node.js","display/graphs/Edge.js","display/graphs/GraphVisual.js","display/input/InputGraph.js","display/input/Profile.js","display/input/Properties.js","display/input/Inputs.js","display/error/Error.js","display/data/Data.js","display/authtokens/TokenPage.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","position","setPosition","labelX","labelY","useEffect","style","userSelect","onMouseDown","e","dragStart","id","onMouseUp","dragEnd","cx","cy","r","stroke","fill","pointerEvents","textAnchor","transform","fontSize","dist","a","b","Math","sqrt","pow","Edge","c","d","node1","setNode1","node2","setNode2","bendPos","setBendPos","bent","posX","posY","points","A","B","C","angle","acos","K","sin","round","laf","PI","saf","join","calcCirclePath","Fragment","render","GraphVisual","mouseIn","setMouseIn","dragId","setDragId","isDraggingNode","setIsDraggingNode","isDraggingEdge","setIsDraggingEdge","originX","setOriginX","originY","setOriginY","prevPosition","setPrevPosition","node","deletingVertex","type","deleteVertex","clientX","clientY","vertices","bendPositions","get","edges","dragging","newX","newY","updateData","updateBendPositions","newVertices","slice","setVertices","newBendPositions","Map","set","setBendPositions","height","width","backgroundColor","onMouseOver","onMouseLeave","onMouseMove","forEach","edge","push","updateEdges","map","InputGraph","addEdge","v1","v2","test","Number","isInteger","length","key","temp","this","i","valid","errors","neighbor","withRouter","email","setEmail","emailError","setEmailError","sent","setSent","graphSaved","setGraphSaved","graphRetrieved","setGraphRetrieved","failedRetrieve","setFailedRetrieve","modal","authenticate","String","toLowerCase","validateEmail","fetch","method","body","JSON","stringify","headers","then","response","json","msg","exit","setModal","successfullyRetrieved","marginTop","message","showIcon","successfullySaved","unsuccessfulRetrieve","loggedIn","footer","onClick","logOut","top","bodyStyle","minHeight","title","localStorage","getItem","visible","onOk","onCancel","display","justifyContent","marginBottom","flexWrap","margin","fontWeight","Array","from","entries","console","log","parse","bp","bentpos","setGraph","getProfile","marginRight","name","Item","label","onChange","target","value","getLogin","Algorithms","maxCycle","minCycle","MAX_VALUE","determinant","m","reduce","filter","_","j","G","vertex","visited","v","mx","max","longestPathFromVertex","count","BFS","k","origin","idx","visited2","cycles","getCyclesFromVertex","adjMatrix","getComponents","generateAdjMatrix","D","laplacian","math","pop","spanningTrees","getSpanningTrees","countCycles","minCyc","maxCyc","property","getLongestPath","Properties","setAdjList","dataSource","setDataSource","algoService","aList","makeAdjList","getProperties","columns","dataIndex","pagination","pageSize","Inputs","showProperties","setShowProperties","showInput","setShowInput","editEdge","setEditEdge","setDeleteEdge","setAddEdge","addEdgeValidStatus1","setAddEdgeValidStatus1","addEdgeValidStatus2","setAddEdgeValidStatus2","setV1","setV2","verticesInput","setVerticesInput","vertexMessage","setVertexMessage","setEdges","edgesMessage","setEdgesMessage","profileModal","setProfileModal","addEdges","inputGraph","clearInput","addOrDeleteEdge","bool","success","deleteEdge","left","straightenEdges","centerGraph","bottom","UserOutlined","logIn","addVertices","marginLeft","validateStatus","help","onPressEnter","autoComplete","min","defaultValue","newEdges","split","hasVertexCount","getGraphInput","content","initialValues","remember","getEditEdge","right","addingVertex","padding","setAddingVertex","setDeletingVertex","getCancel","getDeleteVertex","getAddVertex","Error","Data","updating","setUpdating","edgesMap","bdMap","tryAddVertex","addVertex","x","y","substr1","substr","indexOf","substr2","newKey","newVal","newBendVal","deleteVertexHelper","splice","has","deleteEdgeTest","delete","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","overflow","login","logout","useLocation","pathname","replace","setMessage","status","location","href","search","Routes","setLoggedIn","setItem","exact","path","removeItem","component","to","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sNAAe,I,iDCEA,SAASA,EAAKC,GACzB,MAAgCC,mBAASD,EAAME,UAA/C,mBAAOA,EAAP,KAAiBC,EAAjB,KAEMC,EAASF,EAAS,GAClBG,EAASH,EAAS,GAMxB,OAJAI,qBAAU,WACNH,EAAYH,EAAME,YACnB,CAACF,EAAME,WAGN,oBAAGK,MAAO,CAACC,WAAW,QAASC,YAAa,SAAAC,GAAC,OAAIV,EAAMW,UAAUD,EAAGV,EAAMY,IAAI,IAAOC,UAAW,SAACH,GAAD,OAAOV,EAAMc,QAAQJ,IAArH,UACI,wBAAQK,GAAIX,EAAQY,GAAIX,EAAQY,EAAE,KAAKC,OAAO,UAAU,eAAa,IAAIC,KAAK,YAC9E,sBAAMC,cAAe,OAAQC,WAAW,SAASC,UAAS,oBAAelB,EAAf,aAA0BC,EAAS,EAAnC,KAAyCkB,SAAS,KAA5G,SAAkHvB,EAAMY,QCyDlI,SAASY,EAAKC,EAAGC,GACf,OAAOC,KAAKC,KACVD,KAAKE,IAAIJ,EAAE,GAAKC,EAAE,GAAI,GACtBC,KAAKE,IAAIJ,EAAE,GAAKC,EAAE,GAAI,IAGbI,MA5Ef,SAAc9B,GACV,IAII+B,EACAC,EALJ,EAA0B/B,mBAASD,EAAMiC,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA0BjC,mBAASD,EAAMmC,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA8BnC,mBAASD,EAAMqC,SAA7C,mBAAgBC,GAAhB,WAmCA,OA9BGtC,EAAMqC,SAAWJ,GAASE,KACC,IAAvBnC,EAAMqC,QAAQE,MACbR,EAAI,EAAEE,EAAMO,KAAOL,EAAMK,MAAM,GAAIP,EAAMQ,KAAON,EAAMM,MAAM,GAC5DT,EAAI,KAAOC,EAAMO,KAAO,IAAMP,EAAMQ,KAAO,MAAQV,EAAE,GAAK,IAAMA,EAAE,GAAK,IAAMI,EAAMK,KAAO,IAAML,EAAMM,OAEtGV,EAAI,CAAC/B,EAAMqC,QAAQG,KAAMxC,EAAMqC,QAAQI,MACvCT,EA+BZ,SAAwBU,GACpB,IAAIjB,EAAIiB,EAAO,GACXhB,EAAIgB,EAAO,GACXX,EAAIW,EAAO,GAEXC,EAAInB,EAAKE,EAAGK,GACZa,EAAIpB,EAAKO,EAAGN,GACZoB,EAAIrB,EAAKC,EAAGC,GAEZoB,EAAQnB,KAAKoB,MAAMJ,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,IAAI,EAAEF,EAAEC,IAGzCI,EAAI,GAAGL,EAAEC,EAAEjB,KAAKsB,IAAIH,GACpB7B,EAAI0B,EAAEC,EAAEC,EAAE,EAAEG,EAChB/B,EAAIU,KAAKuB,MAAQ,IAAFjC,GAAQ,IAGvB,IAAIkC,IAAQxB,KAAKyB,GAAG,EAAIN,GAGpBO,KAAS3B,EAAE,GAAKD,EAAE,KAAKM,EAAE,GAAKN,EAAE,KAAOC,EAAE,GAAKD,EAAE,KAAKM,EAAE,GAAKN,EAAE,IAAM,GAExE,MAAO,CAAC,IAAKA,EAAG,IAAKR,EAAGA,EAAG,EAAGkC,EAAKE,EAAK3B,GAAG4B,KAAK,KArDpCC,CAAe,CAAC,CAACpB,EAAMK,KAAML,EAAMM,MAAOV,EAAG,CAACE,EAAMO,KAAMP,EAAMQ,UAI5EnC,qBAAU,WACN4B,EAASlC,EAAMiC,OAAQG,EAASpC,EAAMmC,OACtCG,EAAWtC,EAAMqC,WAClB,CAACrC,EAAMiC,MAAOjC,EAAMmC,MAAOnC,EAAMqC,UAkBhC,cAAC,IAAMmB,SAAP,UAhBW,WACX,GAAGzB,GAAKC,EACJ,OACI,gCACI,8BACI,wBAAQvB,YAAa,SAACC,GAAOV,EAAMW,UAAUD,EAAGV,EAAMY,IAAI,IAAUC,UAAW,SAACH,GAAD,OAAOV,EAAMc,QAAQJ,IAAIK,GAAIgB,EAAE,GAAIf,GAAIe,EAAE,GAAId,EAAG,MAEnI,8BACI,sBAAM,iBAAe,OAAOe,EAAGA,EAAGd,OAAO,QAAQC,KAAK,cAAc,eAAa,IAAI,kBAAgB,4BAShHsC,MCtCE,SAASC,EAAY1D,GAChC,MAA8BC,oBAAS,GAAvC,mBAAO0D,EAAP,KAAgBC,EAAhB,KACA,EAA4B3D,qBAA5B,mBAAO4D,EAAP,KAAeC,EAAf,KACA,EAA4C7D,oBAAS,GAArD,mBAAO8D,EAAP,KAAuBC,EAAvB,KACA,EAA4C/D,oBAAS,GAArD,mBAAOgE,EAAP,KAAuBC,EAAvB,KAEA,EAA8BjE,mBAAS,GAAvC,mBAAOkE,EAAP,KAAgBC,EAAhB,KACA,EAA8BnE,mBAAS,GAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KACA,EAAwCrE,mBAAS,IAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KAEM7D,EAAY,SAACD,EAAGE,EAAI6D,GACtB,IAAe,IAAZd,EAAkB,CACjB,GAAG3D,EAAM0E,gBAA4B,aAAVhE,EAAEiE,KAEzB,YADA3E,EAAM4E,aAAahE,GAOvB,GAJAkD,EAAUlD,GACVwD,EAAW1D,EAAEmE,SACbP,EAAW5D,EAAEoE,SAEVL,EACCT,GAAkB,GAClBQ,EAAgB,CAACxE,EAAM+E,SAASnE,GAAI4B,KAAMxC,EAAM+E,SAASnE,GAAI6B,YAG7D,GADAyB,GAAkB,IACsB,IAArClE,EAAMgF,cAAcC,IAAIrE,GAAI2B,KAC3BiC,EAAgB,CAACxE,EAAMgF,cAAcC,IAAIrE,GAAI4B,KAAMxC,EAAMgF,cAAcC,IAAIrE,GAAI6B,WAC5E,CACH,IAAIR,EAAQjC,EAAM+E,SAAS/E,EAAMkF,MAAMD,IAAIrE,GAAIqB,OAC3CE,EAAQnC,EAAM+E,SAAS/E,EAAMkF,MAAMD,IAAIrE,GAAIuB,OAC/CqC,EAAgB,EAAEvC,EAAMO,KAAOL,EAAMK,MAAQ,GAAIP,EAAMQ,KAAON,EAAMM,MAAQ,OAMtF0C,EAAW,SAACzE,GACd,GAAGqD,GAAkBJ,EAAS,CAC1B,IAAIyB,EAAO1E,EAAEmE,QAAUV,EACnBkB,EAAQ3E,EAAEoE,QAAUT,EACxBiB,EAAW,CACP,GAAMzB,EACN,KAAQU,EAAa,GAAKa,EAC1B,KAAQb,EAAa,GAAKc,SAE3B,GAAGpB,GAAkBN,EAAS,CACjC,IAAIyB,EAAO1E,EAAEmE,QAAUV,EACnBkB,EAAQ3E,EAAEoE,QAAUT,EACxBkB,EAAoB,CAChB,GAAM1B,EACN,KAAQU,EAAa,GAAKa,EAC1B,KAAQb,EAAa,GAAKc,EAC1B,MAAQ,MAKdvE,EAAU,WACZkD,GAAkB,GAClBE,GAAkB,IAGhBoB,EAAa,SAAC7D,GAChB,IAAI+D,EAAcxF,EAAM+E,SAASU,MAAM,GACvCD,EAAY/D,EAAEb,IAAMa,EACpBzB,EAAM0F,YAAYF,IAGhBD,EAAsB,SAAC9D,GACzB,IAAIkE,EAAmB,IAAIC,IAAI5F,EAAMgF,cAAca,IAAIpE,EAAEb,GAAIa,IAC7DzB,EAAM8F,iBAAiBH,IAoB3B,OAFArF,qBAAU,cAAU,CAACN,EAAM+E,SAAU/E,EAAMgF,cAAehF,EAAMgF,cAAehF,EAAMkF,MAAOlF,EAAM+E,WAG9F,sBAAKxE,MAAO,CAACwF,OAAO,QAASC,MAAM,QAASC,gBAAiB,WACzDC,YAAa,WAAOtC,GAAW,IAAQuC,aAAc,SAACzF,GAAOyE,EAASzE,GAAIkD,GAAW,GAAQ9C,KAC7FsF,YAAa,SAAC1F,GAAOyE,EAASzE,IAAKG,UAAW,kBAAMC,KAFxD,UAZgB,SAACW,GACjB,IAAIf,EAAI,GAKR,OAJAV,EAAMkF,MAAMmB,SAAQ,SAACC,GACjB5F,EAAE6F,KAAK,cAAC,EAAD,CAAM5F,UAAWA,EAAWG,QAASA,EAASF,GAAI0F,EAAK1F,GAAIqB,MAAOjC,EAAM+E,SAASuB,EAAKrE,OACrFE,MAAOnC,EAAM+E,SAASuB,EAAKnE,OAAQE,QAASrC,EAAMgF,cAAcC,IAAIqB,EAAK1F,UAE9EF,EASF8F,GApBExG,EAAM+E,SAAS0B,KAAI,SAAAhC,GACtB,OAAQ,cAAC1E,EAAD,CAAMY,UAAWA,EAAWG,QAASA,EAASF,GAAI6D,EAAK7D,GAAIV,SAAU,CAACuE,EAAKjC,KAAMiC,EAAKhC,c,oCC/ErFiE,EACjB,WAAY3B,EAAUG,GAAQ,IAAD,gCAwB7ByB,QAAU,SAACC,EAAIC,GACX,IAAK,QAAQC,KAAKF,KAAU,QAAQE,KAAKD,GACrC,OAAO,EAKX,GAFAD,EAAKG,OAAOH,GACZC,EAAKE,OAAOF,IACPE,OAAOC,UAAUJ,IAAQA,EAAK,EAAK7B,SAASkC,OAAS,EACtD,OAAO,EAEX,IAAKF,OAAOC,UAAUH,IAAQA,EAAK,EAAK9B,SAASkC,OAAS,EACtD,OAAO,EAGX,GAAGL,GAAMC,EACL,OAAO,EAGX,IAAIK,EACJ,GAAGL,EAAKD,EAAI,CACR,IAAIO,EAAOP,EACXA,EAAKC,EACLA,EAAKM,EAsBT,OAnBAD,EAAMN,EAAK,IAAMC,EAEjB,EAAK3B,MAAMW,IAAIqB,EAAK,CAChB,GAAMA,EACN,MAASN,EACT,MAASC,EACT,MAAQ,EACR,KAAQ,KACR,KAAQ,OAIZ,EAAK7B,cAAca,IAAIqB,EAAK,CACxB,GAAMA,EACN,MAAQ,EACR,KAAQ,KACR,KAAQ,QAGL,GAnEPE,KAAKrC,SAAW,GAChB,IAAI,IAAIsC,EAAI,EAAGA,EAAItC,IAAYsC,EAC3BD,KAAKrC,SAASwB,KAAK,CAAC,GAAMc,EAAG,KAAQ,IAAK,KAAQ,MAGtDD,KAAKlC,MAAQ,IAAIU,IACjBwB,KAAKpC,cAAgB,IAAIY,IACzBwB,KAAKE,OAAQ,EACbF,KAAKG,OAAS,GACd,IAAI,IAAIF,EAAI,EAAGA,EAAInC,EAAM+B,SAAUI,EAAG,CAClCD,KAAKG,OAAOhB,KAAK,QADiB,oBAEdrB,EAAMmC,IAFQ,IAElC,IAAI,EAAJ,qBAA8B,CAAC,IAAvBG,EAAsB,QAC1B,IAAIJ,KAAKT,QAAQU,EAAGG,GAAW,CAC3BJ,KAAKE,OAAQ,EACbF,KAAKG,OAAOF,GAAM,QAClB,MACoB,KAAbG,IACPJ,KAAKG,OAAOF,GAAM,UARQ,iC,qECkM/BI,mBAxMf,SAAiBzH,GACb,MAA0BC,qBAA1B,mBAAOyH,EAAP,KAAcC,EAAd,KACA,EAAoC1H,oBAAS,GAA7C,mBAAO2H,EAAP,KAAmBC,EAAnB,KACA,EAAwB5H,oBAAS,GAAjC,mBAAO6H,EAAP,KAAaC,EAAb,KACA,EAAoC9H,oBAAS,GAA7C,mBAAO+H,EAAP,KAAmBC,EAAnB,KACA,EAA4ChI,oBAAS,GAArD,mBAAOiI,EAAP,KAAuBC,EAAvB,KACA,EAA4ClI,oBAAS,GAArD,mBAAOmI,EAAP,KAAuBC,EAAvB,KAEA/H,qBAAU,cAAU,CAACN,EAAMsI,QAO3B,IAAMC,EAAe,SAACb,IALtB,SAAuBA,GAEnB,MADW,wJACDZ,KAAK0B,OAAOd,GAAOe,eAI1BC,CAAchB,GAYbG,GAAc,GAXdc,MAAM,sCAAuC,CACzCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,MAASrB,EACT,MAAS,+CAEbsB,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAG,OAAIrB,GAAQ,OA2C3DsB,EAAO,WACTrJ,EAAMsJ,UAAS,GAAQzB,GAAc,GAAQE,GAAQ,GAAQI,GAAkB,GAAQF,GAAc,GAAQI,GAAkB,IA6D7HkB,EAAwB,WAC1B,OACI,cAAC,IAAM/F,SAAP,UACI,qBAAKjD,MAAO,CAACwF,OAAO,OAAQC,MAAM,OAAQwD,UAAU,QAApD,SACI,cAAC,IAAD,CAAOC,QAAS,+BAAgC9E,KAAK,UAAU+E,UAAQ,SAMjFC,EAAoB,WACtB,OACI,cAAC,IAAMnG,SAAP,UACI,qBAAKjD,MAAO,CAACwF,OAAO,OAAQC,MAAM,OAAQwD,UAAU,QAApD,SACI,cAAC,IAAD,CAAOC,QAAS,2BAA4B9E,KAAK,UAAU+E,UAAQ,SAM7EE,EAAuB,WACzB,OACI,cAAC,IAAMpG,SAAP,UACI,qBAAKjD,MAAO,CAACwF,OAAO,OAAQC,MAAM,OAAQwD,UAAU,QAApD,SACI,cAAC,IAAD,CAAOC,QAAQ,4CAA4C9E,KAAK,QAAQ+E,UAAQ,SAsChG,OACI,cAAC,IAAMlG,SAAP,UACuB,GAAlBxD,EAAM6J,SA1HI,WACf,IAAIC,EACA,eAAC,IAAMtG,SAAP,WACI,cAAC,IAAD,CAAmBuG,QAAS,WAAOV,KAAnC,mBAAY,QAGZ,cAAC,IAAD,CAAQ1E,KAAK,UAAqBoF,QAAS,WAAOV,IAAQrJ,EAAMgK,UAAhE,oBAA2B,WAMnC,OACI,eAAC,IAAD,CAAOzJ,MAAO,CAAC0J,IAAK,OAAQjE,MAAO,QAASkE,UAAW,CAACC,UAAU,SAAUC,MAAO,eAAiBC,aAAaC,QAAQ,SAAUC,QAASvK,EAAMsI,MAC1IkC,KAAM,WAAOnB,KAASoB,SAAU,WAAOpB,KACvCS,OAAQA,EAFhB,UAGI,sBAAKvJ,MAAO,CAACmK,QAAQ,OAAQ1E,MAAM,OAAQ2E,eAAe,SAAUC,aAAa,MAAOpB,UAAU,QAASqB,SAAS,QAApH,UACI,sBAAKtK,MAAO,CAACmK,QAAQ,OAAQG,SAAS,OAAQF,eAAe,SAAU3E,MAAM,SAA7E,UACI,qBAAKzF,MAAO,CAACuK,OAAO,OAAQvJ,SAAS,OAAQwJ,WAAW,OAAxD,iCACA,cAAC,IAAD,CAAQpG,KAAK,UAAUoF,QAAS,WAxC3B,GAAlB/J,EAAM6J,UACLlB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,KAAQ,SACR,MAASsB,aAAaC,QAAQ,SAC9B,MAASxB,KAAKC,UAAUiC,MAAMC,KAAKjL,EAAMkF,MAAMgG,YAC/C,SAAYpC,KAAKC,UAAU/I,EAAM+E,UACjC,QAAW+D,KAAKC,UAAUiC,MAAMC,KAAKjL,EAAMgF,cAAckG,cAE7DlC,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAQnB,GAAc,MA2BAA,GAAc,GAAQE,GAAkB,GAAQE,GAAkB,IAAtH,2BAIJ,sBAAK9H,MAAO,CAACmK,QAAQ,OAAQG,SAAS,OAAQF,eAAe,SAAU3E,MAAM,SAA7E,UACI,qBAAKzF,MAAO,CAACuK,OAAO,OAAQvJ,SAAS,OAAQwJ,WAAW,OAAxD,mCACA,cAAC,IAAD,CAAQpG,KAAK,UAAUoF,QAAS,WAjE3B,GAAlB/J,EAAM6J,UACLlB,MAAM,6CAA8C,CAChDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,KAAQ,WACR,MAASsB,aAAaC,QAAQ,WAElCtB,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAQ+B,QAAQC,IAAIhC,GAAMjB,GAAkB,GAClF,IAAIzH,EAAI,IAAIkF,IAAIkD,KAAKuC,MAAMjC,EAAIlE,QAC3BoG,EAAK,IAAI1F,IAAIkD,KAAKuC,MAAMjC,EAAImC,UAChCvL,EAAMwL,SAAS9K,EAAGoI,KAAKuC,MAAMjC,EAAIrE,UAAWuG,MAoDerD,GAAc,GAAQE,GAAkB,GAAQE,GAAkB,IAArH,+BAIJ,qBAAK9H,MAAO,CAACiJ,UAAU,OAAQoB,aAAa,SAA5C,wEAEH5C,EAAa2B,IAAsB,cAAC,IAAMnG,SAAP,IACnC0E,EAAiBqB,IAA0B,cAAC,IAAM/F,SAAP,IAC3C4E,EAAiBwB,IAAyB,cAAC,IAAMpG,SAAP,OAyFpBiI,GAlClB,WACb,IAAI3B,EACA,eAAC,IAAMtG,SAAP,WACI,cAAC,IAAD,CAAmBuG,QAAS,WAAOV,KAAS9I,MAAO,CAACiJ,UAAU,OAAQoB,aAAa,OAAQc,YAAY,OAAvG,mBAAY,QAGZ,cAAC,IAAD,CAAQ/G,KAAK,UAAqBoF,QAAS,WAAOxB,EAAab,IAA/D,oCAA2B,WAMnC,OACI,cAAC,IAAD,CAAOnH,MAAO,CAAC0J,IAAK,OAAQjE,MAAO,QAASkE,UAAW,CAACC,UAAU,SAAUC,MAAM,wBAAwBG,QAASvK,EAAMsI,MACjHkC,KAAM,WAAOnB,KAASoB,SAAU,WAAOpB,KACvCS,OAAQA,EAAQC,QAAS,kBAAMlC,GAAc,IAFrD,SAGI,sBAAKkC,QAAS,WAAOlC,GAAc,IAAnC,UACA,cAAC,IAAD,CAAM8D,KAAK,QAAQpL,MAAO,CAACwF,OAAO,QAAlC,SACI,cAAC,IAAK6F,KAAN,CACIC,MAAM,QACNF,KAAK,QAFT,SAII,cAAC,IAAD,CAAOG,SAAU,SAACpL,GAAOiH,EAASjH,EAAEqL,OAAOC,cAGlDlE,EAzEL,cAAC,IAAMtE,SAAP,UACI,qBAAKjD,MAAO,CAACwF,OAAO,OAAQC,MAAM,OAAQwD,UAAU,QAApD,SACI,cAAC,IAAD,CAAOC,QAAS,8BAAgC/B,EAAO/C,KAAK,UAAU+E,UAAQ,QAuE1D,cAAC,IAAMlG,SAAP,IACvBoE,EAhEL,cAAC,IAAMpE,SAAP,UACI,qBAAKjD,MAAO,CAACwF,OAAO,OAAQC,MAAM,OAAQwD,UAAU,QAApD,SACI,cAAC,IAAD,CAAOC,QAAQ,gBAAgB9E,KAAK,QAAQ+E,UAAQ,QA8DpB,cAAC,IAAMlG,SAAP,SAQEyI,Q,kBCnMhDC,E,4DACFC,SAAW,E,KACXC,SAAWrF,OAAOsF,U,KAiHlBC,YAAc,SAAAC,GAAC,OACC,GAAZA,EAAEtF,OACFsF,EAAE,GAAG,GACO,GAAZA,EAAEtF,OACFsF,EAAE,GAAG,GAAGA,EAAE,GAAG,GAAGA,EAAE,GAAG,GAAGA,EAAE,GAAG,GAC7BA,EAAE,GAAGC,QAAO,SAACvL,EAAEP,EAAE2G,GAAL,OACRpG,EAAE,UAAE,EAAKoG,EAAE,GAAG3G,EAAE,EAAK4L,YAAYC,EAAE9G,MAAM,GAAGgB,KAAI,SAAA1E,GAAC,OACjDA,EAAE0K,QAAO,SAACC,EAAEC,GAAH,OAAStF,GAAKsF,WAAK,I,uCA/FpC,SAAIC,EAAGC,EAAQC,GACX,IAAI/H,EAAW,CAAC8H,GAGhB,IAFAC,EAAQD,GAAU,EAEZ9H,EAASkC,OAAS,GAAG,CACvB,IADuB,EACnBzB,EAAc,GADK,cAEVT,GAFU,IAEvB,IAAI,EAAJ,qBACI,IADoB,IAAhBgI,EAAe,QACX1F,EAAI,EAAGA,EAAIuF,EAAEG,GAAG9F,SAAUI,EACP,GAApByF,EAAQF,EAAEG,GAAG1F,QACVyF,EAAQF,EAAEG,GAAG1F,IACf7B,EAAYe,KAAKqG,EAAEG,GAAG1F,KANX,8BAUvBtC,EAAWS,K,mCAInB,SAAsBoH,EAAGC,EAAQC,GAC7B,IAAIE,EAAK,EACTF,EAAQD,GAAU,EAFoB,oBAGzBD,EAAEC,IAHuB,IAGtC,IAAI,EAAJ,qBAAwB,CAAC,IAAjBE,EAAgB,QACH,GAAdD,EAAQC,KACPC,EAAKrL,KAAKsL,IAAID,EAAI,EAAI5F,KAAK8F,sBAAsBN,EAAGG,EAAGD,MALzB,8BAStC,OAAOE,I,2BAGX,SAAcJ,GAGV,IAFA,IAAIO,EAAQ,EACRL,EAAU,IAAI9B,MAAM4B,EAAE3F,QAAQ9F,KAAK,GAC/BkG,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EACV,GAAdyF,EAAQzF,OACL8F,EACF/F,KAAKgG,IAAIR,EAAGvF,EAAGyF,IAIvB,OAAOK,I,4BAGX,SAAeP,GAEX,IADA,IAAII,EAAK,EACDK,EAAI,EAAGA,EAAIT,EAAE3F,SAAUoG,EAC3BL,EAAKrL,KAAKsL,IAAI7F,KAAK8F,sBAAsBN,EAAGS,EAAG,IAAIrC,MAAM4B,EAAE3F,QAAQ9F,KAAK,IAAK6L,GAGjF,OAAOA,I,iCAGX,SAAoBJ,EAAGC,EAAQC,EAASQ,EAAQC,EAAKC,GACjD,IAAIC,EAAS,EACbX,EAAQD,GAAU,EAFyC,oBAG9CD,EAAEC,IAH4C,IAG3D,IAAI,EAAJ,qBAAwB,CAAC,IAAjBE,EAAgB,QACF,GAAfS,EAAST,KACLA,GAAKO,GAAUC,GAAO,KACnBE,EACCF,EAAMnG,KAAK+E,WACV/E,KAAK+E,SAAWoB,GAEjBA,EAAMnG,KAAKgF,WACVhF,KAAKgF,SAAWmB,IAEA,GAAdT,EAAQC,KACdU,GAAUrG,KAAKsG,oBAAoBd,EAAGG,EAAGD,EAASQ,EAAQC,EAAI,EAAGC,MAdlB,8BAmB3D,OADAV,EAAQD,GAAU,EACXY,I,+BAGX,SAAkBb,GAEd,IADA,IAAIe,EAAY,IAAI3C,MAAM4B,EAAE3F,QACpBI,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EAC3BsG,EAAUtG,GAAK,IAAI2D,MAAM4B,EAAE3F,QAAQ9F,KAAK,GAG5C,IAAI,IAAIkG,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EAC3B,IAAI,IAAIsF,EAAI,EAAGA,EAAIC,EAAEvF,GAAGJ,SAAU0F,EAC9BgB,EAAUtG,GAAGuF,EAAEvF,GAAGsF,IAAM,EAGhC,OAAOgB,I,8BAYX,SAAiBf,GACb,GAA4B,GAAzBxF,KAAKwG,cAAchB,GAClB,OAAO,EAKX,IAFA,IAAIe,EAAYvG,KAAKyG,kBAAkBjB,GACnCkB,EAAI,IAAI9C,MAAM4B,EAAE3F,QACZI,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EAC3ByG,EAAEzG,GAAK,IAAI2D,MAAM4B,EAAE3F,QAAQ9F,KAAK,GAEpC,IAAI,IAAIkG,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EAC3ByG,EAAEzG,GAAGA,GAAKuF,EAAEvF,GAAGJ,OAGnB,IAAI8G,EAAYC,IAAcF,EAAGH,GACjCI,EAAUE,MAEV,IAAI,IAAI5G,EAAI,EAAGA,EAAIuF,EAAE3F,OAAO,IAAKI,EAC7B0G,EAAU1G,GAAG4G,MAGjB,OAAO7G,KAAKkF,YAAYyB,K,yBAG5B,SAAYnB,GAGR,IAFA,IAAIY,EAAW,IAAIxC,MAAM4B,EAAE3F,QAAQ9F,KAAK,GACpCsM,EAAS,EACLpG,EAAI,EAAGA,EAAIuF,EAAE3F,SAAUI,EAC3BoG,GAAUrG,KAAKsG,oBAAoBd,EAAGvF,EAAG,IAAI2D,MAAM4B,EAAE3F,QAAQ9F,KAAK,GAAIkG,EAAG,EAAGmG,GAAY,EACxFA,EAASnG,GAAK,EAGlB,OAAOoG,I,2BAGX,SAAcb,GACV,IAAIsB,EAAgB9G,KAAK+G,iBAAiBvB,GACtCa,EAASrG,KAAKgH,YAAYxB,GAC1ByB,EAASjH,KAAKgF,SACdkC,EAASlH,KAAK+E,SAqClB,MAjCiB,CACb,CACIjF,IAAK,IACLqH,SAAS,eACTvC,MAPU5E,KAAKoH,eAAe5B,IASlC,CACI1F,IAAK,IACLqH,SAAU,uBACVvC,MAXS5E,KAAKwG,cAAchB,IAahC,CACI1F,IAAK,IACLqH,SAAU,iBACVvC,MAAOkC,GAEX,CACIhH,IAAK,IACLqH,SAAS,mBACTvC,MAAOyB,GAEX,CACIvG,IAAK,IACLqH,SAAS,iBACTvC,MAAOqC,GAAUtH,OAAOsF,UAAY,OAASgC,GAEjD,CACInH,IAAK,IACLqH,SAAS,gBACTvC,MAAiB,GAAVsC,EAAc,OAASA,Q,KAQ/B,SAASG,EAAWzO,GAC/B,MAAgCC,mBAAS,GAAzC,mBACA,GADA,UAC8BA,sBAA9B,mBAAgByO,GAAhB,WACA,EAAkCzO,qBAAlC,mBACA,GADA,UACoCA,sBAApC,mBAAO0O,EAAP,KAAmBC,EAAnB,KACMC,EAAc,IAAI3C,EAqCxB,OALA5L,qBAAU,WACN,IAAI4E,EAhBY,SAAC6H,EAAG7H,GAEpB,IADA,IAAI4J,EAAQ,IAAI9D,MAAM+B,GACd1F,EAAI,EAAGA,EAAI0F,IAAK1F,EACpByH,EAAMzH,GAAK,IAAI2D,MASnB,OANA9F,EAAMmB,SAAQ,SAAC2F,EAAO9E,GAClB4H,EAAM9C,EAAM/J,OAAOsE,KAAKyF,EAAM7J,OAC9B2M,EAAM9C,EAAM7J,OAAOoE,KAAKyF,EAAM/J,UAGlCyM,EAAWI,GACJA,EAIKC,CAAY/O,EAAM+E,SAASkC,OAAQjH,EAAMkF,OACrD0J,EAAcC,EAAYG,cAAc9J,MACzC,CAAClF,EAAM+E,SAAU/E,EAAMkF,QAGtB,cAAC,IAAD,CAAOyJ,WAAYA,EAAYM,QApCrB,CACV,CACI7E,MAAO,WACP8E,UAAW,WACXhI,IAAK,OACLlB,MAAO,KAEX,CACIoE,MAAO,QACP8E,UAAW,QACXhI,IAAK,MACLlB,MAAO,MAyBsCmJ,WAAY,CAAEC,SAAU,KChPlE,SAASC,EAAOrP,GAC3B,MAA4CC,oBAAS,GAArD,mBAAOqP,EAAP,KAAuBC,EAAvB,KACA,EAAkCtP,oBAAS,GAA3C,mBAAOuP,EAAP,KAAkBC,EAAlB,KACA,EAAoCxP,mBAAS,CAAC,CAAC,GAAM,SAAU,MAAS,OAAxE,mBAEA,GAFA,UAEgCA,oBAAS,IAAzC,mBAAOyP,EAAP,KAAiBC,EAAjB,KACA,EAAoC1P,oBAAS,GAA7C,mBAAmB2P,GAAnB,WACA,EAA8B3P,oBAAS,GAAvC,mBAAO0G,EAAP,KAAgBkJ,EAAhB,KACA,EAAsD5P,mBAAS,QAA/D,mBAAO6P,EAAP,KAA4BC,EAA5B,KACA,EAAsD9P,mBAAS,QAA/D,mBAAO+P,EAAP,KAA4BC,EAA5B,KAEA,EAAoBhQ,mBAAS,IAA7B,mBAAO2G,EAAP,KAAWsJ,EAAX,KACA,EAAoBjQ,mBAAS,IAA7B,mBAAO4G,EAAP,KAAWsJ,EAAX,KAEA,EAA0ClQ,mBAAS,GAAnD,oBAAOmQ,GAAP,MAAsBC,GAAtB,MACA,GAAgCpQ,mBAAS,GAAzC,qBAAO8E,GAAP,MAAiBW,GAAjB,MACA,GAA0CzF,qBAA1C,qBAAOqQ,GAAP,MAAsBC,GAAtB,MACA,GAA0BtQ,qBAA1B,qBAAOiF,GAAP,MAAcsL,GAAd,MACA,GAAwCvQ,qBAAxC,qBAAOwQ,GAAP,MAAqBC,GAArB,MAEA,GAAwCzQ,oBAAS,GAAjD,qBAAO0Q,GAAP,MAAqBC,GAArB,MAYMC,GAAW,WACb,IAAIC,EAAa,IAAIpK,EAAW3B,GAAUG,KAClB,IAArB4L,EAAWxJ,OACVtH,EAAMwL,SAASsF,EAAW5L,MAAO4L,EAAW/L,SAAU+L,EAAW9L,eAAe,GAChF+L,MAEAL,GAAgBI,EAAWvJ,SAI7BwJ,GAAa,WACfrL,GAAY,GACZ+J,GAAa,GACbc,GAAiB,QACjBC,KACAE,MAgGEM,GAAkB,SAACC,GAEjB,IAAIC,EADR,GAAU,KAAPtK,GAAoB,KAAPC,EASZ,OANIqK,EADDD,EACWjR,EAAM2G,QAAQC,EAAIC,GAElB7G,EAAMmR,WAAWvK,EAAIC,GAEnCkJ,EAAuBmB,EAAQ,IAC/BjB,EAAuBiB,EAAQ,IACxBA,EAEP,IAAI7D,EAAI,GAcR,MAbU,KAAPzG,EACCyG,EAAE9G,KAAK,SAEP8G,EAAE9G,KAAK,QAGD,KAAPM,EACCwG,EAAE9G,KAAK,SAEP8G,EAAE9G,KAAK,QAEXwJ,EAAuB1C,EAAE,IACzB4C,EAAuB5C,EAAE,IAClBA,GA+Ef,OACI,eAAC,IAAM7J,SAAP,WACI,sBAAKjD,MAAO,CAACL,SAAS,WAAYwK,QAAQ,OAAQlB,UAAU,OAAQ4H,KAAK,qBAAzE,UACI,cAAC,IAAD,CAAQ7Q,MAAO,CAACuK,OAAQ,MAAO/E,OAAO,OAAQC,MAAM,QAASzE,SAAS,QAASoD,KAAK,UAAUoF,QAAS,kBAAM0F,GAAa,IAA1H,yBACA,cAAC,IAAD,CAAQlP,MAAO,CAACuK,OAAQ,MAAO/E,OAAO,OAAQC,MAAM,QAASzE,SAAS,QAASoD,KAAK,UAAUoF,QAAS,WAAO/J,EAAMqR,mBAApH,8BACA,cAAC,IAAD,CAAQ9Q,MAAO,CAACuK,OAAQ,MAAO/E,OAAO,OAAQC,MAAM,QAASzE,SAAS,QAASoD,KAAK,UAAUoF,QAAS,kBAAMwF,GAAkB,IAA/H,8BACA,cAAC,IAAD,CAAQhP,MAAO,CAACuK,OAAQ,MAAO/E,OAAO,OAAQC,MAAM,QAASzE,SAAS,QAASoD,KAAK,UAAUoF,QAAS,kBAAM/J,EAAMsR,eAAnH,6BAEJ,qBAAK/Q,MAAO,CAACL,SAAS,WAAYkR,KAAK,qBAAsBG,OAAO,oBAApE,SACI,cAAC,IAAD,CAAQhR,MAAO,CAACyF,MAAM,OAAQD,OAAO,QAASpB,KAAK,UAAUoF,QAAS,kBAAM6G,IAAgB,IAA5F,SACI,cAACY,EAAA,EAAD,QAGR,cAAC,EAAD,CAASlJ,MAAOqI,GAAcrH,SAAUsH,GAAiB/G,SAAU7J,EAAM6J,SAAU4H,MAAOzR,EAAMyR,MAAOzH,OAAQhK,EAAMgK,OAC7G9E,MAAOlF,EAAMkF,MAAOH,SAAU/E,EAAM+E,SAAUC,cAAehF,EAAMgF,cAAewG,SAAUxL,EAAMwL,WApN5F,WAClB,IAAM1B,EACF,eAAC,IAAMtG,SAAP,WACI,cAAC,IAAD,CAAmBuG,QAAS,WAAOgH,MAAnC,mBAAY,QAGZ,cAAC,IAAD,CAAQpM,KAAK,UAAUoF,QAAS,WACX,IAAbhF,GAnCA,WAChBW,GAAY0K,IACZ,IAAI/C,EAAIrC,MAAMoF,IACd/C,EAAElM,KAAK,IACPqP,GAASnD,GACT,IAAId,EAAIvB,MAAMoF,IACd7D,EAAEpL,KAAK,QACPuP,GAAgBnE,GA4BiBmF,GAAgBb,MADzC,SAIkB,IAAb9L,GAAiB,WAAa,mBA2C3C,OACI,cAAC,IAAD,CAAOxE,MAAO,CAAC0J,IAAK,OAAQG,MAAM,cAAcG,QAASiF,EAAW/E,SAAU,WAAOsG,MAAejH,OAAQA,EAA5G,SACK,qBAAKvJ,MAAO,CAACmK,QAAQ,OAAQ1E,MAAM,OAAQ2E,eAAe,SAAUnB,UAAU,OAAQoB,aAAa,OAAQ+G,WAAW,SAAtH,SACG,cAAC,IAAD,CACIlR,YAAa,WAAOsP,EAAuB,SAD/C,SAzCW,WACnB,GAAgB,IAAbhL,GACC,OACI,cAAC,IAAK6G,KAAN,CACIC,MAAM,8BACNF,KAAK,KACLiG,eAAgB9B,EAChB+B,KAAwB,UAAlBvB,GAA4B,gBAAkB,KAJxD,SAMI,cAAC,IAAD,CAAawB,aAAc,SAACpR,GAAOgF,GAAY0K,KAAiB2B,aAAa,MAAMjG,SAAU,SAACE,GAAD,OAAWqE,GAAiBrE,IAC7GgG,IAAK,EAAG/E,IAAK,GAAIgF,aAAc,MAKnD,IADA,IAAI5E,EAAI,GADL,WAEKhG,GACJgG,EAAE9G,KACE,cAAC,IAAKqF,KAAN,CACIgG,eAAgBnB,GAAapJ,GAC7BwK,KAA0B,UAApBpB,GAAapJ,GAAiB,gBAAkB,KACtDwE,MAAO/C,KAAKC,UAAU1B,GAH1B,SAKI,cAAC,IAAD,CAAO4K,aAAa,GAAG1R,MAAO,CAACyF,MAAM,OAAQ8E,OAAO,OAAQgH,aAAc,SAACpR,GAAOmQ,MAAakB,aAAa,MAAMjG,SAAU,SAACpL,GACpH,IAAIwR,EAAQ,YAAOhN,IAAQgN,EAAS7K,GAAM3G,EAAEqL,OAAOC,MAAOmG,MAAM,KAAK7O,KAAK,IAAI6O,MAAM,KAAM3B,GAAS0B,UARhH7K,EAAI,EAAGA,EAAItC,KAAYsC,EAAI,EAA3BA,GAYR,OACI,eAAC,IAAM7D,SAAP,WACI,qBAAKjD,MAAO,CAACiJ,UAAU,QAASoB,aAAa,QAA7C,qFACA,qBAAKrK,MAAO,CAACmK,QAAQ,OAAQ1E,MAAM,QAAS2L,WAAW,OAAQjG,YAAY,OAAQb,SAAS,OAAQF,eAAe,gBAAnH,SACK0C,OAaJ+E,SA2JZC,GApJa,WAClB,IAAIC,EACAxI,EAiBJ,OAfAwI,EACI,eAAC,IAAM9O,SAAP,WACI,cAACiL,EAAD,CAAY1J,SAAU/E,EAAM+E,SAAUG,MAAOlF,EAAMkF,QACnD,cAAC,IAAD,CAAOuE,QAAQ,sHAAsH9E,KAAK,UAAU+E,UAAQ,OAIpKI,EACI,cAAC,IAAMtG,SAAP,UACI,cAAC,IAAD,CAAqBmB,KAAK,UAAUoF,QAAS,WAAOwF,GAAkB,IAAtE,mBAAY,YAOhB,cAAC,IAAD,CAAOhP,MAAO,CAAC0J,IAAK,OAAQjE,MAAO,QAASkE,UAAW,CAACC,UAAU,SAAUC,MAAM,mBAAmBG,QAAS+E,EAAgB9E,KAAM,WAAO+E,GAAkB,IAAS9E,SAAU,WAAO8E,GAAkB,IACjMzF,OAAQA,EADhB,SAEKwI,IA+HJtD,GA5FW,WAChB,IAAMlF,EACF,eAAC,IAAMtG,SAAP,WACI,cAAC,IAAD,CAAmBuG,QAAS,WAAO4F,GAAY,GAAQE,GAAW,GAAQD,GAAc,IAAxF,mBAAY,QAGZ,cAAC,IAAD,CAAQjL,KAAK,UAAUoF,QAAS,WACdiH,KAAVrK,IADR,SAIKA,EAAU,WAAa,mBAKpC,OACI,cAAC,IAAD,CAAOpG,MAAO,CAAC0J,IAAK,OAAQG,MAAOzD,EAAU,WAAa,cAAe4D,QAASmF,EAAUjF,SAAU,WAAOkF,GAAY,GAAQE,GAAW,GAAQD,GAAc,GAC1JG,EAAuB,QAASE,EAAuB,SAAUnG,OAAQA,EADjF,SAEK,qBAAKvJ,MAAO,CAACmK,QAAQ,OAAQ1E,MAAM,OAAQ2E,eAAe,SAAUnB,UAAU,OAAQoB,aAAa,OAAQ+G,WAAW,SAAtH,SACG,eAAC,IAAD,CACIY,cAAe,CAAEC,UAAU,GAC3B/R,YAAa,WAAOsP,EAAuB,QAC3CE,EAAuB,SAH3B,UAKI,cAAC,IAAKrE,KAAN,CACIC,MAAM,WACNF,KAAK,KACLiG,eAAgB9B,EAChB+B,KAA8B,UAAxB/B,EAAkC,gBAAkB,KAJ9D,SAMI,cAAC,IAAD,CAAOgC,aAAc,SAACpR,GAAiBsQ,KAAVrK,IAA2DoL,aAAa,MAAMjG,SAAU,SAACpL,GAAD,OAAOwP,EAAMxP,EAAEqL,OAAOC,YAE/I,cAAC,IAAKJ,KAAN,CACIgG,eAAgB5B,EAChB6B,KAA8B,UAAxB7B,EAAkC,gBAAkB,KAC1DnE,MAAM,WACNF,KAAK,KAJT,SAMI,cAAC,IAAD,CAAOmG,aAAc,SAACpR,GAAiBsQ,KAAVrK,IAA2DoL,aAAa,MAAMjG,SAAU,SAACpL,GAAD,OAAOyP,EAAMzP,EAAEqL,OAAOC,mBAuD1JyG,GACD,sBAAKlS,MAAO,CAACL,SAAS,WAAYwK,QAAQ,OAAQgI,MAAM,KAAMnB,OAAO,KAAM1G,SAAS,OAAQ7E,MAAM,SAAlG,UAhDU,WACd,GAAGhG,EAAM2S,cAAgB3S,EAAM0E,eAC3B,OACI,cAAC,IAAD,CAAQnE,MAAO,CAACuK,OAAO,OAAQ/E,OAAO,OAAQC,MAAM,OAAQzE,SAAS,OAAQqR,QAAQ,OAAQjO,KAAK,UAC1FoF,QAAS,WAAO/J,EAAM6S,iBAAgB,GAAQ7S,EAAM8S,mBAAkB,IAD9E,oBA8CCC,GA7BW,WACpB,GAAG/S,EAAM0E,eACL,OACI,cAAC,IAAD,CAAOnE,MAAO,CAACL,SAAU,WAAYwS,MAAM,OAAQnB,OAAO,OAAQvL,MAAO,SACrEyD,QAAQ,+BAA+B9E,KAAK,QAAQ+E,UAAQ,IA0B/DsJ,GAvCQ,WACjB,GAAGhT,EAAM2S,aACL,OACI,cAAC,IAAD,CAAOpS,MAAO,CAACL,SAAU,WAAYwS,MAAM,OAAQnB,OAAO,OAAQvL,MAAO,SACrEyD,QAAQ,oDAAoD9E,KAAK,UAAU+E,UAAQ,IAoCtFuJ,GACD,cAAC,IAAD,CAAQ1S,MAAO,CAACuK,OAAO,OAAQ/E,OAAO,OAAQC,MAAM,OAAQzE,SAAS,OAAQqR,QAAQ,OAAQjO,KAAK,UAC1FoF,QAAS,WAAO6F,GAAc,GAAOD,GAAY,IADzD,yBAIA,cAAC,IAAD,CAAQpP,MAAO,CAACuK,OAAO,OAAQ/E,OAAO,OAAQC,MAAM,OAAQzE,SAAS,OAAQqR,QAAQ,OAAQjO,KAAK,UAC1FoF,QAAS,WAAO/J,EAAM6S,iBAAgB,GAAQ7S,EAAM8S,mBAAkB,IAD9E,yBAIA,cAAC,IAAD,CAAQvS,MAAO,CAACuK,OAAO,OAAQ/E,OAAO,OAAQC,MAAM,OAAQzE,SAAS,OAAQqR,QAAQ,OAAQjO,KAAK,UAC9FoF,QAAS,WAAO8F,GAAW,GAAOF,GAAY,IADlD,sBAIA,cAAC,IAAD,CAAQpP,MAAO,CAACuK,OAAO,OAAQ/E,OAAO,OAAQC,MAAM,OAAQzE,SAAS,OAAQqR,QAAQ,OAAQjO,KAAK,UAC9FoF,QAAS,WAAO/J,EAAM8S,mBAAkB,GAAQ9S,EAAM6S,iBAAgB,IAD1E,4BCpSD,SAASK,IACpB,OACI,qBAAK3S,MAAO,CAACyF,MAAM,OAAQD,OAAO,QAAlC,SACI,cAAC,IAAD,CAAO0D,QAAQ,6IAA6I9E,KAAK,UAAU+E,UAAQ,MCAhL,SAASyJ,EAAKnT,GACzB,IAsBA,EAAgCC,oBAAS,GAAzC,mBAAOmT,EAAP,KAAiBC,EAAjB,KACA,EAAgCpT,mBAAS,MAAzC,mBAAO8E,EAAP,KAAiBW,EAAjB,KA0EI4N,EAAW,IAAI1N,IACf2N,EAAQ,IAAI3N,IAzEG,CAAC,CAChfgN,EAASzN,IAAIS,EAAKrE,MAAQ,IAAMqE,EAAKnE,MAAOmE,GAC5CiN,EAAM1N,IAAIS,EAAKrE,MAAQ,IAAMqE,EAAKnE,MAAO,CAAC,GAAMmE,EAAK1F,GAAI,KAAO0F,EAAK/D,KAAM,KAAQ+D,EAAK9D,KAAM,KAAO8D,EAAK7D,UAG9G,MAA0BxC,mBAAS,MAAnC,mBAAOiF,EAAP,KAAcsL,EAAd,KACA,EAAwCvQ,oBAAS,GAAjD,mBAAO0S,EAAP,KAAqBE,EAArB,KACA,EAA4C5S,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBoO,EAAvB,KACA,EAA0C7S,mBAAS,MAAnD,mBAAO+E,EAAP,KAAsBc,EAAtB,KAEM0F,EAAW,SAACtG,EAAOH,EAAUuG,GAC/B+H,GAAY,GACZ3N,EAAYX,GACZyL,EAAStL,GACTY,EAAiBwF,IAGL,OAAbvG,GACCyG,EAAS8H,EAtHG,CAAC,CACb,GAAM,EACN,KAAQ,IACR,KAAQ,KACT,CACC,GAAM,EACN,KAAQ,KACR,KAAQ,KACT,CACC,GAAM,EACN,KAAQ,IACR,KAAQ,KACT,CACC,GAAM,EACN,KAAQ,KACR,KAAQ,KACT,CACC,GAAM,EACN,KAAQ,IACR,KAAQ,MAmGsBC,GAGlC,IAAMC,EAAe,SAAC9S,GACL,SAAVA,EAAEiE,MACEgO,GAAgB5N,EAASkC,QAAU,IAClCwM,EAAU/S,EAAEmE,QAAU,GAAInE,EAAEoE,QAAU,IAE1C+N,GAAgB,IAEhBA,GAAgB,IAIlBY,EAAY,SAACC,EAAGC,GAClB5O,EAASwB,KAAK,CAAC,GAAMxB,EAASkC,OAAQ,KAAQyM,EAAG,KAAOC,KAGtDtC,EAAkB,WACpBnM,EAAMmB,SAAQ,SAAAC,GACViN,EAAM1N,IAAIS,EAAKrE,MAAQ,IAAMqE,EAAKnE,MAAO,CAAC,GAAMmE,EAAK1F,GAAI,MAAO,EAAO,KAAQ,EAAG,KAAQ,OAG9FkF,EAAiByN,IAGf3O,EAAe,SAAC2I,GAClB,IAAI2E,EAAW,IAAItM,IACfD,EAAmB,IAAIC,IAC3BV,EAAMmB,SAAQ,SAAC0G,GACX,IAAI7F,EAAM6F,EAAEnM,GACRgT,EAAU7M,OAAOG,EAAI2M,OAAO,EAAG3M,EAAI4M,QAAQ,OAC3CC,EAAUhN,OAAOG,EAAI2M,OAAO3M,EAAI4M,QAAQ,KAAO,EAAG5M,EAAID,OAAS,IAEnE,GAAG2M,IAAYrG,GAAOwG,IAAYxG,EAAK,CAChCqG,EAASrG,KAAOqG,EAChBG,EAAUxG,KAAOwG,EAEpB,IAAIC,EAASJ,EAAU,IAAMG,EACzBE,EAASlH,EACbkH,EAAM,GAASD,EACfC,EAAM,MAAYL,EAClBK,EAAM,MAAYF,EAClB,IAAIG,EAAalP,EAAcC,IAAIiC,GACnCgN,EAAU,GAASF,EAEnB9B,EAASrM,IAAI+N,EAAU,IAAMG,EAASE,GACtCtO,EAAiBE,IAAI+N,EAAU,IAAMG,EAASG,OAGtD1D,EAAS0B,GACTpM,EAAiBH,GACjBmN,GAAkB,GAClBqB,EAAmB5G,IAGjB4G,EAAqB,SAAC5G,GACxB,IAAIF,EAAItI,EACRsI,EAAE+G,OAAO7G,EAAK,GACd,IAAI,IAAIlG,EAAIkG,EAAKlG,EAAIgG,EAAEpG,SAAUI,IAC3BgG,EAAEhG,GAAGzG,GAEX8E,EAAY2H,IAYV1G,EAAU,SAACC,EAAIC,GACjB,IAsBIK,EAtBAI,EAAQ,CAAC,OAAQ,QAGrB,IAFAV,EAAKG,OAAOH,KACZC,EAAKE,OAAOF,IACA,CACR,IAAIM,EAAOP,EACXA,EAAKC,EACLA,EAAKM,EAaT,QAVKJ,OAAOC,UAAUJ,IAAQA,EAAK7B,EAASkC,OAAS,KACjDK,EAAM,GAAM,WAEXP,OAAOC,UAAUH,IAAQA,EAAK9B,EAASkC,OAAS,KACjDK,EAAM,GAAK,SAEZV,IAAOC,IACNS,EAAM,GAAK,QACXA,EAAM,GAAK,SAEC,UAAbA,EAAM,IAA+B,UAAbA,EAAM,GACtBA,GAIPJ,EADDN,EAAKC,EACEA,EAAK,IAAMD,EAEXA,EAAK,IAAMC,EAElB3B,EAAMmP,IAAInN,GACF,CAAC,QAAS,UAEjBsJ,EAAS,IAAI5K,IAAIV,EAAMW,IAAIqB,EAAK,CAC5B,GAAMA,EACN,MAASN,EACT,MAASC,EACT,MAAQ,EACR,KAAQ,KACR,KAAQ,SAIZf,EAAiB,IAAIF,IAAIZ,EAAca,IAAIqB,EAAK,CAC5C,GAAMA,EACN,MAAQ,EACR,KAAQ,KACR,KAAQ,SAGL,CAAC,UAAW,cAIrBoN,EAAiB,SAAC1N,EAAIC,GACxB,IAcIK,EAdAI,EAAQ,CAAC,OAAQ,QAarB,OAZAV,EAAKG,OAAOH,GACZC,EAAKE,OAAOF,KAEPE,OAAOC,UAAUJ,IAAQA,EAAK7B,EAASkC,OAAS,KAAGK,EAAM,GAAM,WAE/DP,OAAOC,UAAUH,IAAQA,EAAK9B,EAASkC,OAAS,KAAGK,EAAM,GAAK,SAEhEV,IAAOC,IACNS,EAAM,GAAK,QACXA,EAAM,GAAK,SAGC,UAAbA,EAAM,IAA+B,UAAbA,EAAM,GAAuBA,GAIpDJ,EADDN,EAAKC,EACEA,EAAK,IAAMD,EAEXA,EAAK,IAAMC,EAEjB3B,EAAMmP,IAAInN,IApFC,SAACA,GAChB,IAAImG,EAAI,IAAIzH,IAAIV,GAChBmI,EAAEkH,OAAOrN,GACT,IAAIxF,EAAI,IAAIkE,IAAIZ,GAChBtD,EAAE6S,OAAOrN,GACTsJ,EAASnD,GACTvH,EAAiBpE,GAiFbyP,CAAWjK,GACJ,CAAC,UAAW,YAHZ,CAAC,QAAS,WAOnBoK,EAAc,WAChB,IAAI9L,EAAc,GACd6B,EAAI,EACJgG,EAAItI,EAASkC,OACjBlC,EAASsB,SAAQ,SAAAwG,GACVxF,EAAIgG,EAAI,GACPR,EAAOrK,KAAO,IAAc,IAAP6E,EAAEgG,EAAE,GACzBR,EAAOpK,KAAO,MAEdoK,EAAOrK,KAAO,IAAQ,GAAF6E,EACpBwF,EAAOpK,KAAO,OAEhB4E,EACF7B,EAAYe,KAAKsG,MAGrBnH,EAAYF,GACZ6L,KAGJ,EAA0BpR,mBAASuU,OAAOC,YAA1C,mBAAcC,GAAd,WAEApU,qBAAU,WACH8S,GAAUC,GAAY,GAEzB,IAAMsB,EAAe,kBAAMD,EAASF,OAAOC,aAE3C,OADAD,OAAOI,iBAAiB,SAAUD,GAC3B,WACHH,OAAOK,oBAAoB,SAAUF,MAI1C,CAACzP,EAAOF,EAAewP,OAAOC,aAwBjC,OACI,cAAC,IAAMjR,SAAP,UAtBGgR,OAAOC,WAAa,MAEf,sBAAKlU,MAAO,CAACuU,SAAS,QAAtB,UACI,cAACzF,EAAD,CAAQwD,gBAAiBA,EAAiBxB,gBAAiBA,EAAiB1K,QAASA,EAASmM,kBAAmBA,EAAmB3B,WAAYmD,EACpI9I,SAAUA,EAAUtG,MAAOA,EAAOH,SAAUA,EAAUC,cAAeA,EACrEyM,MAAOzR,EAAM+U,MAAO/K,OAAQhK,EAAMgV,OAAQnL,SAAU7J,EAAM6J,SAAUyH,YAAaA,EACjFqB,aAAcA,EAAcjO,eAAgBA,IAExD,qBAAKnE,MAAO,CAACmK,QAAQ,OAAQ3E,OAAQ,OAAQC,MAAM,OAAQ2L,WAAW,MAAOjG,YAAY,MAAOlC,UAAU,MAAOoB,aAAa,SAAUkK,SAAS,UAC7I/K,QAAS,SAACrJ,GAAO8S,EAAa9S,GAAImS,GAAgB,IADtD,SAGKO,EAAW,cAAC,IAAM5P,SAAP,IAAoB,cAACE,EAAD,CAAaqB,SAAUA,EAAUG,MAAOA,EAAOF,cAAeA,EAAeU,YAAaA,EAAahB,eAAgBA,EAC3IoB,iBAAkBA,EAAkBrF,YAAa,SAACC,GAAO8S,EAAa9S,GAAImS,GAAgB,IAASjO,aAAcA,SAKlI,cAACsO,EAAD,MChSJzL,mBA3Cf,SAAmBzH,GACf,MAAoBC,mBAAUgV,cAAcC,SAAUC,QAAQ,kBAAmB,KAAjF,mBAAOvU,EAAP,KACA,GADA,KAC8BX,mBAAS,SAAvC,mBAAOwJ,EAAP,KAAgB2L,EAAhB,KAaML,EAAQ,SAAC3L,GAGX,GAFAgM,EAAWhM,GAEO,aAAfA,EAAIiM,OAAuB,CAC1BrV,EAAM+U,MAAM3L,EAAI1B,OAChB,IAAI2F,EAAImH,OAAOc,SAASC,KACpBhJ,EAAIc,EAAEmI,OAAO,kBACjBhB,OAAOc,SAASH,QAAQ9H,EAAEwG,OAAO,EAAEtH,MAc3C,OAVAjM,qBAAU,WACN,IAAsB,IAAnBN,EAAM6J,SAAmB,CACxB,IAAIwD,EAAImH,OAAOc,SAASC,KACpBhJ,EAAIc,EAAEmI,OAAO,kBACjBhB,OAAOc,SAASH,QAAQ9H,EAAEwG,OAAO,EAAEtH,SA1BvC5D,MAAM,+CAAiD/H,EAAI,CACvDgI,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjB,MAASnI,IAEboI,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAG,OAAI2L,EAAM3L,QAsBxD,IAGC,6BACKK,EAAQ4L,YCpCN,SAASI,IACtB,MAAgCxV,mBAASoK,aAAaC,QAAQ,aAA9D,mBAAOT,EAAP,KAAiB6L,EAAjB,KACA,EAA0BzV,mBAASoK,aAAaC,QAAQ,UAAxD,mBAEMyK,GAFN,UAEc,SAACrN,GACb2C,aAAasL,QAAQ,YAAY,GACjCtL,aAAasL,QAAQ,QAASjO,GAC9BgO,GAAY,KAkBd,OATApV,qBAAU,WAC+B,QAApC+J,aAAaC,QAAQ,YACtBoL,GAAY,GAEZA,GAAY,KAGb,IAGC,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC1C,EAAD,CAAMtJ,SAAUA,EAAUkL,MAAOA,EAAOC,OAlBvD,WACb3K,aAAasL,QAAQ,YAAY,GACjCtL,aAAayL,WAAW,SACxBJ,GAAY,QAgBN,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,wBAAwBE,UAAW,kBAAM,cAAC,EAAD,CAAWlM,SAAUA,EAAUkL,MAAOA,OACjG,cAAC,IAAD,CAAOc,KAAK,IAAZ,SAAgB,cAAC,IAAD,CAAUG,GAAG,a,aCTxBC,MAdf,WAIE,OAHA3V,qBAAU,eAIR,eAAC,IAAMkD,SAAP,WACE,cAAC0S,EAAA,EAAD,UACI,wDAEJ,cAACT,EAAD,QCTSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpN,MAAK,YAAkD,IAA/CqN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlT,OACP,cAAC,IAAMmT,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.22134cf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nexport default function Node(props) {\r\n    const [position, setPosition] = useState(props.position);\r\n    \r\n    const labelX = position[0];\r\n    const labelY = position[1];\r\n\r\n    useEffect(() => {\r\n        setPosition(props.position);\r\n    }, [props.position])\r\n\r\n    return (\r\n        <g style={{userSelect:\"none\"}} onMouseDown={e => props.dragStart(e, props.id, true)} onMouseUp={(e) => props.dragEnd(e)}>\r\n            <circle cx={labelX} cy={labelY} r=\"40\" stroke=\"#2ab863\" stroke-width=\"4\" fill=\"#ccffcf\"/>\r\n            <text pointerEvents={\"none\"} textAnchor=\"middle\" transform={`translate(${labelX}, ${labelY + 5})`} fontSize=\"20\">{props.id}</text>\r\n        </g>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Edge(props) {\r\n    const [node1, setNode1] = useState(props.node1);\r\n    const [node2, setNode2] = useState(props.node2);\r\n    const [bendPos, setBendPos] = useState(props.bendPos);\r\n\r\n    let c;\r\n    let d;\r\n    \r\n    if(props.bendPos && node1 && node2) {\r\n        if(props.bendPos.bent === false) {\r\n            c = [(node1.posX + node2.posX)/2, (node1.posY + node2.posY)/2];\r\n            d = \"M \" + node1.posX + \" \" + node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + node2.posX + \" \" + node2.posY;\r\n        } else {\r\n            c = [props.bendPos.posX, props.bendPos.posY];\r\n            d = calcCirclePath([[node2.posX, node2.posY], c, [node1.posX, node1.posY]]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNode1(props.node1); setNode2(props.node2);\r\n        setBendPos(props.bendPos);\r\n    }, [props.node1, props.node2, props.bendPos])\r\n\r\n    const render = () => {\r\n        if(c && d) {\r\n            return (\r\n                <svg>\r\n                    <svg>\r\n                        <circle onMouseDown={(e) => {props.dragStart(e, props.id, false);}} onMouseUp={(e) => props.dragEnd(e)} cx={c[0]} cy={c[1]} r={6}/>\r\n                    </svg>\r\n                    <svg>\r\n                        <path pointer-events=\"none\" d={d} stroke=\"black\" fill=\"transparent\" stroke-width=\"3\" shape-rendering=\"geometricPrecision\"/>\r\n                    </svg>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {render()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction calcCirclePath(points){\r\n    var a = points[0]\r\n    var b = points[2]\r\n    var c = points[1]\r\n  \r\n    var A = dist(b, c)\r\n    var B = dist(c, a)\r\n    var C = dist(a, b)\r\n  \r\n    var angle = Math.acos((A*A + B*B - C*C)/(2*A*B))\r\n  \r\n    //calc radius of circle\r\n    var K = .5*A*B*Math.sin(angle)\r\n    var r = A*B*C/4/K\r\n    r = Math.round(r*1000)/1000\r\n  \r\n    //large arc flag\r\n    var laf = +(Math.PI/2 > angle)\r\n  \r\n    //sweep flag\r\n    var saf = +((b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) < 0) \r\n  \r\n    return ['M', a, 'A', r, r, 0, laf, saf, b].join(' ')\r\n  }\r\n  \r\n  function dist(a, b){\r\n    return Math.sqrt(\r\n      Math.pow(a[0] - b[0], 2) +\r\n      Math.pow(a[1] - b[1], 2))\r\n  }\r\n\r\nexport default Edge\r\n\r\n// if(props.bendPos.bent === false) {\r\n//     c = [(props.node1.posX + props.node2.posX)/2, (props.node1.posY + props.node2.posY)/2];\r\n//     d = \"M \" + props.node1.posX + \" \" + props.node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + props.node2.posX + \" \" + props.node2.posY;\r\n// } else {\r\n//     c = [props.bendPos.posX, props.bendPos.posY];\r\n//     d = calcCirclePath([[props.node2.posX, props.node2.posY], c, [props.node1.posX, props.node1.posY]]);\r\n// }\r\n\r\n// useEffect(() => {\r\n//     if(props.bendPos.bent === false) {\r\n//         c = [(props.node1.posX + props.node2.posX)/2, (props.node1.posY + props.node2.posY)/2];\r\n//         d = \"M \" + props.node1.posX + \" \" + props.node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + props.node2.posX + \" \" + props.node2.posY;\r\n//     } else {\r\n//         c = [props.bendPos.posX, props.bendPos.posY];\r\n//         d = calcCirclePath([[props.node2.posX, props.node2.posY], c, [props.node1.posX, props.node1.posY]]);\r\n//     }\r\n// }, [props.node1, props.node2, props.bendPos])\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Node from './Node';\r\nimport Edge from './Edge';\r\n\r\nexport default function GraphVisual(props) {\r\n    const [mouseIn, setMouseIn] = useState(false);\r\n    const [dragId, setDragId] = useState();\r\n    const [isDraggingNode, setIsDraggingNode] = useState(false);\r\n    const [isDraggingEdge, setIsDraggingEdge] = useState(false);\r\n\r\n    const [originX, setOriginX] = useState(0);\r\n    const [originY, setOriginY] = useState(0);\r\n    const [prevPosition, setPrevPosition] = useState([]);\r\n\r\n    const dragStart = (e, id, node) => {\r\n        if(mouseIn === true) {\r\n            if(props.deletingVertex && e.type == 'mousedown') {\r\n                props.deleteVertex(id);\r\n                return;\r\n            }\r\n            setDragId(id);\r\n            setOriginX(e.clientX);\r\n            setOriginY(e.clientY);\r\n\r\n            if(node) {\r\n                setIsDraggingNode(true);\r\n                setPrevPosition([props.vertices[id].posX, props.vertices[id].posY]);\r\n            } else {\r\n                setIsDraggingEdge(true);\r\n                if(props.bendPositions.get(id).bent === true) {\r\n                    setPrevPosition([props.bendPositions.get(id).posX, props.bendPositions.get(id).posY]);\r\n                } else {  \r\n                    let node1 = props.vertices[props.edges.get(id).node1];\r\n                    let node2 = props.vertices[props.edges.get(id).node2];\r\n                    setPrevPosition([(node1.posX + node2.posX) / 2, (node1.posY + node2.posY) / 2]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const dragging = (e) => {\r\n        if(isDraggingNode && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateData({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY\r\n            });\r\n        } else if(isDraggingEdge && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateBendPositions({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY,\r\n                \"bent\": true\r\n            });\r\n        }\r\n    }\r\n\r\n    const dragEnd = () => {\r\n        setIsDraggingNode(false);\r\n        setIsDraggingEdge(false);\r\n    }\r\n\r\n    const updateData = (a) => {\r\n        let newVertices = props.vertices.slice(0);\r\n        newVertices[a.id] = a;\r\n        props.setVertices(newVertices);\r\n    }\r\n\r\n    const updateBendPositions = (a) => {\r\n        let newBendPositions = new Map(props.bendPositions.set(a.id, a));\r\n        props.setBendPositions(newBendPositions);\r\n    }\r\n\r\n    const updateVertices = (a) => {\r\n        return props.vertices.map(node => {\r\n            return (<Node dragStart={dragStart} dragEnd={dragEnd} id={node.id} position={[node.posX, node.posY]}/>);\r\n        })\r\n    }\r\n\r\n    const updateEdges = (a) => {\r\n        let e = [];\r\n        props.edges.forEach((edge) => {\r\n            e.push(<Edge dragStart={dragStart} dragEnd={dragEnd} id={edge.id} node1={props.vertices[edge.node1]} \r\n                    node2={props.vertices[edge.node2]} bendPos={props.bendPositions.get(edge.id)}/>)\r\n        })\r\n        return e;\r\n    }\r\n\r\n    useEffect(() => {}, [props.vertices, props.bendPositions, props.bendPositions, props.edges, props.vertices])\r\n\r\n    return (\r\n        <svg style={{height:\"600vh\", width:\"600vw\", backgroundColor: '#dbedff'}} \r\n            onMouseOver={() => {setMouseIn(true)}} onMouseLeave={(e) => {dragging(e); setMouseIn(false); dragEnd()}}\r\n            onMouseMove={(e) => {dragging(e)}} onMouseUp={() => dragEnd()}>\r\n            {updateEdges()}\r\n            {updateVertices()}\r\n        </svg>\r\n    )\r\n}\r\n\r\n","export default class InputGraph {\r\n    constructor(vertices, edges) {\r\n        this.vertices = [];\r\n        for(let i = 0; i < vertices; ++i) {\r\n            this.vertices.push({\"id\": i, \"posX\": 500, \"posY\": 500});\r\n        }\r\n\r\n        this.edges = new Map;\r\n        this.bendPositions = new Map;\r\n        this.valid = true;\r\n        this.errors = [];\r\n        for(let i = 0; i < edges.length; ++i) {\r\n            this.errors.push(\"none\");\r\n            for(let neighbor of edges[i]) {\r\n                if(!this.addEdge(i, neighbor)) {\r\n                    this.valid = false;\r\n                    this.errors[i] = (\"error\");\r\n                    break;\r\n                } else if (neighbor === \"\") {\r\n                    this.errors[i] = (\"error\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addEdge = (v1, v2) => {\r\n        if(!(/^\\d+$/.test(v1)) || !(/^\\d+$/.test(v2))) {\r\n            return false;\r\n        }\r\n\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(!(Number.isInteger(v1)) || v1 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n\r\n        if(v1 == v2) {\r\n            return false;\r\n        }\r\n        \r\n        let key;\r\n        if(v2 > v1) {\r\n            let temp = v1;\r\n            v1 = v2;\r\n            v2 = temp;\r\n        }\r\n\r\n        key = v1 + \".\" + v2;\r\n        \r\n        this.edges.set(key, {\r\n            \"id\": key,\r\n            \"node1\": v1,\r\n            \"node2\": v2,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n\r\n        this.bendPositions.set(key, {\r\n            \"id\": key,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Alert, Button, Modal, Input, Form, InputNumber } from 'antd';\r\nimport { useLocation, withRouter } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nfunction Profile(props) {\r\n    const [email, setEmail] = useState();\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [sent, setSent] = useState(false);\r\n    const [graphSaved, setGraphSaved] = useState(false);\r\n    const [graphRetrieved, setGraphRetrieved] = useState(false);\r\n    const [failedRetrieve, setFailedRetrieve] = useState(false);\r\n \r\n    useEffect(() => {}, [props.modal]);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const authenticate = (email) => {\r\n        if(validateEmail(email)) {\r\n            fetch('https://graphtt.herokuapp.com/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'email': email, // change here\r\n                    'route': \"https://kevinht2010.github.io/graphtool/#/\"\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => setSent(true))\r\n        } else {\r\n            setEmailError(true);\r\n        }\r\n    }\r\n\r\n    const getGraph = () => {\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/retrieve', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"retrieve\",\r\n                    'email': localStorage.getItem(\"email\")\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {console.log(msg); setGraphRetrieved(true)\r\n                let e = new Map(JSON.parse(msg.edges));\r\n                let bp = new Map(JSON.parse(msg.bentpos));\r\n                props.setGraph(e, JSON.parse(msg.vertices), bp);\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveGraph = () => {\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/upload', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"upload\",\r\n                    'email': localStorage.getItem(\"email\"),\r\n                    'edges': JSON.stringify(Array.from(props.edges.entries())),\r\n                    'vertices': JSON.stringify(props.vertices),\r\n                    'bentpos': JSON.stringify(Array.from(props.bendPositions.entries()))\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {setGraphSaved(true)})\r\n        }\r\n    }\r\n\r\n    const exit = () => {\r\n        props.setModal(false); setEmailError(false); setSent(false); setGraphRetrieved(false); setGraphSaved(false); setFailedRetrieve(false);\r\n    }\r\n\r\n    const getProfile = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {exit(); props.logOut()}}>\r\n                    Log out\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"120px\"}} title={\"Logged into \" + localStorage.getItem(\"email\")} visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer}>\r\n                <div style={{display:'flex', width:\"100%\", justifyContent:\"center\", marginBottom:\"5px\", marginTop:\"-15px\", flexWrap:\"wrap\"}}>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Save current graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {saveGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Save Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Retrieve saved graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {getGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Retrieve Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{marginTop:\"45px\", marginBottom:\"-15px\"}}>(Currently this feature is limited to 1 graph per user)</div>\r\n                </div>\r\n                {graphSaved ? successfullySaved() : <React.Fragment/>}\r\n                {graphRetrieved ? successfullyRetrieved() : <React.Fragment/>}\r\n                {failedRetrieve ? unsuccessfulRetrieve() : <React.Fragment/>}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const sentMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message={\"Email successfully sent to \" + email} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const emailErrorMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message=\"Invalid Email\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullyRetrieved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully retrieved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullySaved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully saved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const unsuccessfulRetrieve = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message=\"No graph to retrieve. Save a graph first!\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const getLogin = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}} style={{marginTop:\"10px\", marginBottom:\"10px\", marginRight:\"46%\"}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {authenticate(email)}}>\r\n                    Send Confirmation Email\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"100px\"}} title=\"Log In To Save Graphs\" visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer} onClick={() => setEmailError(false)}>\r\n                <div onClick={() => {setEmailError(false);}}>\r\n                <Form name=\"basic\" style={{height:\"30px\"}}>\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                    >\r\n                        <Input onChange={(e) => {setEmail(e.target.value)}}/>\r\n                    </Form.Item>\r\n                </Form>\r\n                {sent ? sentMessage() : <React.Fragment/>}\r\n                {emailError ? emailErrorMessage() : <React.Fragment/>}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.loggedIn == true ?  getProfile() : getLogin()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Table } from 'antd';\r\nimport * as math from 'mathjs'\r\n\r\nclass Algorithms {\r\n    maxCycle = 0;\r\n    minCycle = Number.MAX_VALUE;\r\n\r\n    // edges = [\r\n    //     [1,2,3,4],\r\n    //     [0,2,3,4],\r\n    //     [0,1,3,4],\r\n    //     [0,1,2,4],\r\n    //     [0,1,2,3],\r\n    //     [6,7,8,9],\r\n    //     [5,7,8,9],\r\n    //     [5,6,8,9],\r\n    //     [5,6,7,9],\r\n    //     [5,6,7,8],\r\n    //     [11,12],\r\n    //     [10,12],\r\n    //     [10,11],\r\n    // ]\r\n    \r\n    // edges2 = [\r\n    //     [1,2,3],\r\n    //     [0,2,3],\r\n    //     [0,1,3],\r\n    //     [0,1,2]\r\n    // ]\r\n    \r\n    BFS(G, vertex, visited) {\r\n        let vertices = [vertex];\r\n        visited[vertex] = 1;\r\n    \r\n        while(vertices.length > 0) {\r\n            let newVertices = [];\r\n            for(let v of vertices) {\r\n                for(let i = 0; i < G[v].length; ++i) {\r\n                    if(visited[G[v][i]] != 1) {\r\n                        ++visited[G[v][i]];\r\n                        newVertices.push(G[v][i]);\r\n                    }\r\n                }\r\n            }\r\n            vertices = newVertices;\r\n        }\r\n    }\r\n    \r\n    longestPathFromVertex(G, vertex, visited) {\r\n        let mx = 0;\r\n        visited[vertex] = 1;\r\n        for(let v of G[vertex]) {\r\n            if(visited[v] != 1) {\r\n                mx = Math.max(mx, 1 + this.longestPathFromVertex(G, v, visited));\r\n            }\r\n        }\r\n    \r\n        return mx;\r\n    }\r\n    \r\n    getComponents(G) {\r\n        let count = 0;\r\n        let visited = new Array(G.length).fill(0)\r\n        for(let i = 0; i < G.length; ++i) {\r\n            if(visited[i] == 0) {\r\n                ++count;\r\n                this.BFS(G, i, visited);\r\n            }\r\n        }\r\n    \r\n        return count;\r\n    }\r\n    \r\n    getLongestPath(G) {\r\n        let mx = 0;\r\n        for(let k = 0; k < G.length; ++k) {\r\n            mx = Math.max(this.longestPathFromVertex(G, k, new Array(G.length).fill(0)), mx);\r\n        }\r\n    \r\n        return mx;\r\n    }\r\n    \r\n    getCyclesFromVertex(G, vertex, visited, origin, idx, visited2) {\r\n        let cycles = 0;\r\n        visited[vertex] = 1;\r\n        for(let v of G[vertex]) {\r\n            if(visited2[v] == 0) {\r\n                if(v == origin && idx >= 2) {\r\n                    ++cycles;\r\n                    if(idx > this.maxCycle) {\r\n                        this.maxCycle = idx;\r\n                    }\r\n                    if(idx < this.minCycle) {\r\n                        this.minCycle = idx;\r\n                    }\r\n                } else if(visited[v] == 0) {\r\n                    cycles += this.getCyclesFromVertex(G, v, visited, origin, idx+1, visited2);\r\n                }\r\n            }\r\n        }\r\n        visited[vertex] = 0;\r\n        return cycles;\r\n    }\r\n    \r\n    generateAdjMatrix(G) {\r\n        let adjMatrix = new Array(G.length);\r\n        for(let i = 0; i < G.length; ++i) {\r\n            adjMatrix[i] = new Array(G.length).fill(0);\r\n        }\r\n    \r\n        for(let i = 0; i < G.length; ++i) {\r\n            for(let j = 0; j < G[i].length; ++j) {\r\n                adjMatrix[i][G[i][j]] = 1;\r\n            }\r\n        }\r\n        return adjMatrix;\r\n    }\r\n\r\n    determinant = m => \r\n        m.length == 1 ?\r\n        m[0][0] :\r\n        m.length == 2 ? \r\n        m[0][0]*m[1][1]-m[0][1]*m[1][0] :\r\n        m[0].reduce((r,e,i) => \r\n            r+(-1)**(i+2)*e*this.determinant(m.slice(1).map(c => \r\n            c.filter((_,j) => i != j))),0)\r\n    \r\n    getSpanningTrees(G) {\r\n        if(this.getComponents(G) != 1) {\r\n            return 0;\r\n        }\r\n    \r\n        let adjMatrix = this.generateAdjMatrix(G);\r\n        let D = new Array(G.length);\r\n        for(let i = 0; i < G.length; ++i) {\r\n            D[i] = new Array(G.length).fill(0);\r\n        } \r\n        for(let i = 0; i < G.length; ++i) {\r\n            D[i][i] = G[i].length;\r\n        }\r\n\r\n        let laplacian = math.subtract(D, adjMatrix);\r\n        laplacian.pop();\r\n\r\n        for(let i = 0; i < G.length-1; ++i) {\r\n            laplacian[i].pop();\r\n        }\r\n\r\n        return this.determinant(laplacian);\r\n    }\r\n    \r\n    countCycles(G) {\r\n        let visited2 = new Array(G.length).fill(0);\r\n        let cycles = 0;\r\n        for(let i = 0; i < G.length; ++i) {\r\n            cycles += this.getCyclesFromVertex(G, i, new Array(G.length).fill(0), i, 0, visited2) / 2;\r\n            visited2[i] = 1;\r\n        }\r\n    \r\n        return cycles;\r\n    }\r\n\r\n    getProperties(G) {\r\n        let spanningTrees = this.getSpanningTrees(G);\r\n        let cycles = this.countCycles(G);\r\n        let minCyc = this.minCycle;\r\n        let maxCyc = this.maxCycle;\r\n        let longestPath = this.getLongestPath(G);\r\n        let components = this.getComponents(G);\r\n    \r\n        let properties = [\r\n            {\r\n                key: '1',\r\n                property:'Longest Path',\r\n                value: longestPath\r\n            },\r\n            {\r\n                key: '2',\r\n                property: 'Number of Components',\r\n                value: components\r\n            },\r\n            {\r\n                key: '3',\r\n                property: 'Spanning Trees',\r\n                value: spanningTrees\r\n            },\r\n            {\r\n                key: '4',\r\n                property:'Number of Cycles',\r\n                value: cycles\r\n            },\r\n            {\r\n                key: '5',\r\n                property:'Shortest Cycle',\r\n                value: minCyc == Number.MAX_VALUE ? \"Null\" : minCyc\r\n            },\r\n            {\r\n                key: '6',\r\n                property:'Longest Cycle',\r\n                value: maxCyc == 0 ? \"Null\" : maxCyc\r\n            }\r\n        ]\r\n    \r\n        return properties;\r\n    }\r\n}\r\n\r\nexport default function Properties(props) {\r\n    const [vertices, setVertices] = useState(0);\r\n    const [adjList, setAdjList] = useState();\r\n    const [adjMatrix, setAdjMatrix] = useState();\r\n    const [dataSource, setDataSource] = useState();\r\n    const algoService = new Algorithms();\r\n    \r\n    let columns = [\r\n        {\r\n            title: 'Property',\r\n            dataIndex: 'property',\r\n            key: 'name',\r\n            width: 250\r\n        },\r\n        {\r\n            title: 'Value',\r\n            dataIndex: 'value',\r\n            key: 'val',\r\n            width: 120\r\n        },\r\n    ];\r\n\r\n    const makeAdjList = (v, edges) => {\r\n        let aList = new Array(v);\r\n        for(let i = 0; i < v; ++i) {\r\n            aList[i] = new Array();\r\n        }\r\n\r\n        edges.forEach((value, key) => {\r\n            aList[value.node1].push(value.node2);\r\n            aList[value.node2].push(value.node1);\r\n        })\r\n\r\n        setAdjList(aList);\r\n        return(aList);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let edges = makeAdjList(props.vertices.length, props.edges);\r\n        setDataSource(algoService.getProperties(edges));\r\n    }, [props.vertices, props.edges])\r\n\r\n    return (\r\n        <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 3 }}/>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport InputGraph from './InputGraph'\r\nimport { Button, Modal, Checkbox, Input, Form, InputNumber, Alert } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport Profile from './Profile.js'\r\nimport Properties from './Properties';\r\n\r\n\r\n// Will Refactor Soon\r\n\r\n\r\n\r\nexport default function Inputs(props) {\r\n    const [showProperties, setShowProperties] = useState(false);\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [properties, setProperties] = useState([{\"id\": \"cycles\", \"value\": \"5\"}]);\r\n\r\n    const [editEdge, setEditEdge] = useState(false);\r\n    const [deleteEdge, setDeleteEdge] = useState(false);\r\n    const [addEdge, setAddEdge] = useState(false);\r\n    const [addEdgeValidStatus1, setAddEdgeValidStatus1] = useState(\"none\");\r\n    const [addEdgeValidStatus2, setAddEdgeValidStatus2] = useState(\"none\");\r\n\r\n    const [v1, setV1] = useState(\"\");\r\n    const [v2, setV2] = useState(\"\");\r\n\r\n    const [verticesInput, setVerticesInput] = useState(1);\r\n    const [vertices, setVertices] = useState(0);\r\n    const [vertexMessage, setVertexMessage] = useState();\r\n    const [edges, setEdges] = useState();\r\n    const [edgesMessage, setEdgesMessage] = useState();\r\n\r\n    const [profileModal, setProfileModal] = useState(false);\r\n\r\n    const addVertices = () => {\r\n        setVertices(verticesInput);\r\n        let k = Array(verticesInput);\r\n        k.fill([]);\r\n        setEdges(k);\r\n        let m = Array(verticesInput);\r\n        m.fill(\"none\")\r\n        setEdgesMessage(m);\r\n    }\r\n\r\n    const addEdges = () => {\r\n        let inputGraph = new InputGraph(vertices, edges);\r\n        if(inputGraph.valid === true) {\r\n            props.setGraph(inputGraph.edges, inputGraph.vertices, inputGraph.bendPositions, true);\r\n            clearInput();\r\n        } else {\r\n            setEdgesMessage(inputGraph.errors);\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setVertices(0);\r\n        setShowInput(false); \r\n        setVertexMessage(\"none\");\r\n        setEdges();\r\n        setEdgesMessage();\r\n    }\r\n\r\n    const getGraphInput = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {clearInput()}}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        vertices === 0 ? addVertices() : addEdges();\r\n                    }\r\n                }>\r\n                    {vertices === 0 ? \"Continue\" : \"Input Graph\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        const hasVertexCount = () => {\r\n            if(vertices === 0) {\r\n                return (\r\n                    <Form.Item\r\n                        label=\"Number of Vertices (Max 14)\"\r\n                        name=\"v1\"\r\n                        validateStatus={addEdgeValidStatus1}\r\n                        help={vertexMessage === \"error\" ? \"Invalid Input\" : null}\r\n                    >\r\n                        <InputNumber onPressEnter={(e) => {setVertices(verticesInput)}} autoComplete=\"off\" onChange={(value) => setVerticesInput(value)} \r\n                                    min={1} max={14} defaultValue={1}/>\r\n                    </Form.Item>\r\n                )\r\n            } else {\r\n                let k = [];\r\n                for(let i = 0; i < vertices; ++i) {\r\n                    k.push(\r\n                        <Form.Item\r\n                            validateStatus={edgesMessage[i]}\r\n                            help={edgesMessage[i] === \"error\" ? \"Invalid Input\" : null}\r\n                            label={JSON.stringify(i)}\r\n                        >\r\n                            <Input defaultValue=\"\" style={{width:\"70px\", margin:\"2px\"}} onPressEnter={(e) => {addEdges()}} autoComplete=\"off\" onChange={(e) => \r\n                                    {let newEdges = [...edges]; newEdges[i] = (e.target.value).split(\" \").join(\"\").split(\",\"); setEdges(newEdges);}} />\r\n                        </Form.Item>\r\n                    )\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        <div style={{marginTop:\"-15px\", marginBottom:\"35px\"}}>Edges (adjacency list, seperating neighbors of each vertex with commas)</div>\r\n                        <div style={{display:\"flex\", width:\"350px\", marginLeft:\"auto\", marginRight:\"auto\", flexWrap:\"wrap\", justifyContent:\"space-around\"}}>\r\n                            {k}\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal style={{top: \"10%\"}} title=\"Input Graph\" visible={showInput} onCancel={() => {clearInput()}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\")}}\r\n                        >\r\n                        {hasVertexCount()}\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const getProperties = () => {\r\n        let content;\r\n        let footer;\r\n\r\n        content = (\r\n            <React.Fragment>\r\n                <Properties vertices={props.vertices} edges={props.edges}/>\r\n                <Alert message=\"Some feature are still in progress (number of spanning forests, planarity, etc.) - please check back in a few days!\" type=\"warning\" showIcon  />\r\n            </React.Fragment>\r\n        )\r\n\r\n        footer = (\r\n            <React.Fragment>\r\n                <Button key=\"submit\" type=\"primary\" onClick={() => {setShowProperties(false)}}>\r\n                    Return\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n        \r\n        return (\r\n            <Modal style={{top: \"15%\"}} width={\"600px\"} bodyStyle={{minHeight:\"200px\"}} title=\"Graph Properties\" visible={showProperties} onOk={() => {setShowProperties(false)}} onCancel={() => {setShowProperties(false)}}\r\n                    footer={footer}>\r\n                {content}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const addOrDeleteEdge = (bool) => {\r\n        if(v1 !== \"\" && v2 !== \"\") {\r\n            let success;\r\n            if(bool) {\r\n                success = props.addEdge(v1, v2);\r\n            } else {\r\n                success = props.deleteEdge(v1, v2);\r\n            }\r\n            setAddEdgeValidStatus1(success[0]);\r\n            setAddEdgeValidStatus2(success[1]);\r\n            return success;\r\n        } else {\r\n            let k = [];\r\n            if(v1 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\")\r\n            }\r\n\r\n            if(v2 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\");\r\n            }\r\n            setAddEdgeValidStatus1(k[0]);\r\n            setAddEdgeValidStatus2(k[1]);\r\n            return k;\r\n        }\r\n    }\r\n\r\n    const getEditEdge = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false)}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)\r\n                    }\r\n                }>\r\n                    {addEdge ? \"Add Edge\" : \"Delete Edge\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"25%\"}} title={addEdge ? \"Add Edge\" : \"Delete Edge\"} visible={editEdge} onCancel={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false);\r\n                    setAddEdgeValidStatus1(\"none\"); setAddEdgeValidStatus2(\"none\")}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        initialValues={{ remember: true }}\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\");\r\n                        setAddEdgeValidStatus2(\"none\")}}\r\n                        >\r\n                        <Form.Item\r\n                            label=\"Vertex 1\"\r\n                            name=\"v1\"\r\n                            validateStatus={addEdgeValidStatus1}\r\n                            help={addEdgeValidStatus1 === \"error\" ? \"Invalid Input\" : null}\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV1(e.target.value)} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            validateStatus={addEdgeValidStatus2}\r\n                            help={addEdgeValidStatus2 === \"error\" ? \"Invalid Input\" : null}\r\n                            label=\"Vertex 2\"\r\n                            name=\"v2\"\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV2(e.target.value)} />\r\n                        </Form.Item>\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const getCancel = () => {\r\n        if(props.addingVertex || props.deletingVertex) {\r\n            return (\r\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {props.setAddingVertex(false); props.setDeletingVertex(false);}}>\r\n                    Cancel\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getAddVertex = () => {\r\n        if(props.addingVertex) {\r\n            return (\r\n                <Alert style={{position: 'absolute', right:\"103%\", bottom:\"3.5%\", width: \"355px\"}} \r\n                    message=\"Click anywhere to add a vertex! (Max 20 vertices)\" type=\"success\" showIcon />\r\n            )\r\n        }\r\n    }\r\n\r\n    const getDeleteVertex = () => {\r\n        if(props.deletingVertex) {\r\n            return (\r\n                <Alert style={{position: 'absolute', right:\"103%\", bottom:\"3.5%\", width: \"250px\"}} \r\n                    message=\"Click a vertex to delete it!\" type=\"error\" showIcon />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{position:\"absolute\", display:\"flex\", marginTop:\"45px\", left:\"calc(15px + 3.5%)\"}} >\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowInput(true)}>Input Graph</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => {props.straightenEdges()}}>Straighten Edges</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowProperties(true)}>Graph Properties</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => props.centerGraph()}>Center Graph</Button>\r\n            </div>\r\n            <div style={{position:\"absolute\", left:\"calc(15px + 3.75%)\", bottom:\"calc(6vh + 15px)\"}}>\r\n                <Button style={{width:\"55px\", height:\"45px\"}} type=\"primary\" onClick={() => setProfileModal(true)}>\r\n                    <UserOutlined/>\r\n                </Button>\r\n            </div>\r\n            <Profile modal={profileModal} setModal={setProfileModal} loggedIn={props.loggedIn} logIn={props.logIn} logOut={props.logOut}\r\n                    edges={props.edges} vertices={props.vertices} bendPositions={props.bendPositions} setGraph={props.setGraph}\r\n                    />\r\n            {getGraphInput()}\r\n            {getProperties()}\r\n            {getEditEdge()}\r\n            <div style={{position:\"absolute\", display:\"flex\", right:\"3%\", bottom:\"6%\", flexWrap:\"wrap\", width:\"125px\"}}>\r\n                {getCancel()}\r\n                {getDeleteVertex()}\r\n                {getAddVertex()}\r\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {setDeleteEdge(true); setEditEdge(true);}}>\r\n                    Delete Edge\r\n                </Button>\r\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {props.setAddingVertex(false); props.setDeletingVertex(true)}}>\r\n                    Delete Node\r\n                </Button>\r\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {setAddEdge(true); setEditEdge(true)}}>\r\n                    Add Edge\r\n                </Button>\r\n                <Button style={{margin:\"10px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {props.setDeletingVertex(false); props.setAddingVertex(true)}}>\r\n                    Add Node\r\n                </Button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Alert} from 'antd'\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div style={{width:\"100%\", height:\"100%\"}}>\r\n            <Alert message=\"Mobile view is still under construction! Please check in later (for now, please use the app on pc view - apologies for any inconveniences)\" type=\"warning\" showIcon  />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Inputs from '../../display/input/Inputs.js'\r\nimport GraphVisual from '../graphs/GraphVisual.js'\r\nimport Error from '../error/Error.js'\r\nimport { Alert } from 'antd'\r\n\r\nexport default function Data(props) {\r\n    let tvertices = [{\r\n        \"id\": 0,\r\n        \"posX\": 850,\r\n        \"posY\": 200\r\n    }, {\r\n        \"id\": 1,\r\n        \"posX\": 1150,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 2,\r\n        \"posX\": 550,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 3,\r\n        \"posX\": 1050,\r\n        \"posY\": 720\r\n    }, {\r\n        \"id\": 4,\r\n        \"posX\": 650,\r\n        \"posY\": 720\r\n    }]\r\n\r\n    const [updating, setUpdating] = useState(false);\r\n    const [vertices, setVertices] = useState(null)\r\n\r\n    const edgesArray = [{\r\n        \"id\": \"0.1\",\r\n        \"node1\": 0,\r\n        \"node2\": 1,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.2\",\r\n        \"node1\": 1,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.3\",\r\n        \"node1\": 1,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.2\",\r\n        \"node1\": 0,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.3\",\r\n        \"node1\": 0,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.3\",\r\n        \"node1\": 2,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.4\",\r\n        \"node1\": 0,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.4\",\r\n        \"node1\": 1,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.4\",\r\n        \"node1\": 2,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"3.4\",\r\n        \"node1\": 3,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }]\r\n\r\n    let edgesMap = new Map();\r\n    let bdMap = new Map();\r\n\r\n    edgesArray.forEach(edge => {\r\n        edgesMap.set(edge.node1 + \".\" + edge.node2, edge);\r\n        bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":edge.bent, \"posX\": edge.posX, \"posY\":edge.posY});\r\n    })\r\n\r\n    const [edges, setEdges] = useState(null);\r\n    const [addingVertex, setAddingVertex] = useState(false);\r\n    const [deletingVertex, setDeletingVertex] = useState(false);\r\n    const [bendPositions, setBendPositions] = useState(null);\r\n\r\n    const setGraph = (edges, vertices, bp, bl = false) => {\r\n        setUpdating(true);\r\n        setVertices(vertices);\r\n        setEdges(edges);\r\n        setBendPositions(bp);\r\n    }\r\n\r\n    if(vertices === null) {\r\n        setGraph(edgesMap, tvertices, bdMap)\r\n    }\r\n\r\n    const tryAddVertex = (e) => {\r\n        if(e.type == 'click') {\r\n            if(addingVertex && vertices.length <= 13) {\r\n                addVertex(e.clientX - 55, e.clientY - 13)\r\n            }\r\n            setAddingVertex(false);\r\n        } else {\r\n            setAddingVertex(false);\r\n        }\r\n    }\r\n\r\n    const addVertex = (x, y) => {\r\n        vertices.push({\"id\": vertices.length, \"posX\": x, \"posY\":y});\r\n    }\r\n\r\n    const straightenEdges = () => {\r\n        edges.forEach(edge => {\r\n            bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":false, \"posX\": 0, \"posY\": 0});\r\n        })\r\n\r\n        setBendPositions(bdMap);\r\n    }\r\n\r\n    const deleteVertex = (idx) => {\r\n        let newEdges = new Map();\r\n        let newBendPositions = new Map();\r\n        edges.forEach((v) => {\r\n            let key = v.id;\r\n            let substr1 = Number(key.substr(0, key.indexOf('.')));\r\n            let substr2 = Number(key.substr(key.indexOf('.') + 1, key.length - 1));\r\n\r\n            if(substr1 !== idx && substr2 !== idx) {\r\n                if(substr1> idx) --substr1;\r\n                if(substr2 > idx) --substr2;\r\n\r\n                let newKey = substr1 + \".\" + substr2;\r\n                let newVal = v;\r\n                newVal[\"id\"] = newKey;\r\n                newVal[\"node1\"] = substr1;\r\n                newVal[\"node2\"] = substr2;\r\n                let newBendVal = bendPositions.get(key);\r\n                newBendVal[\"id\"] = newKey;\r\n\r\n                newEdges.set(substr1 + \".\" + substr2, newVal);\r\n                newBendPositions.set(substr1 + \".\" + substr2, newBendVal);\r\n            }\r\n        })\r\n        setEdges(newEdges);\r\n        setBendPositions(newBendPositions);\r\n        setDeletingVertex(false);\r\n        deleteVertexHelper(idx)\r\n    }\r\n\r\n    const deleteVertexHelper = (idx) => {\r\n        let k = vertices;\r\n        k.splice(idx, 1);\r\n        for(let i = idx; i < k.length; ++i) {\r\n            --k[i].id;\r\n        }\r\n        setVertices(k);\r\n    }\r\n\r\n    const deleteEdge = (key) => {\r\n        let k = new Map(edges);\r\n        k.delete(key);\r\n        let b = new Map(bendPositions);\r\n        b.delete(key);\r\n        setEdges(k);\r\n        setBendPositions(b);\r\n    }\r\n\r\n    const addEdge = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(v1 > v2) {\r\n            let temp = v1;\r\n            v1 = v2;\r\n            v2 = temp;\r\n        }\r\n\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) {\r\n            valid[0] = (\"error\");\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) {\r\n            valid[1] = \"error\";\r\n        }\r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") {\r\n            return valid;\r\n        }\r\n        let key;\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            setEdges(new Map(edges.set(key, {\r\n                \"id\": key,\r\n                \"node1\": v1,\r\n                \"node2\": v2,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n\r\n            setBendPositions(new Map(bendPositions.set(key, {\r\n                \"id\": key,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const deleteEdgeTest = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) valid[0] = (\"error\");\r\n        \r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) valid[1] = \"error\";\r\n        \r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") return valid;\r\n        let key;\r\n\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(!edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            deleteEdge(key);\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const centerGraph = () => {\r\n        let newVertices = [];\r\n        let i = 0;\r\n        let k = vertices.length;\r\n        vertices.forEach(vertex => {\r\n            if(i > k / 2) {\r\n                vertex.posX = 500 + (i-k/2)*50;\r\n                vertex.posY = 320 + 200;\r\n            } else {\r\n                vertex.posX = 500 + i*50;\r\n                vertex.posY = 320;\r\n            }\r\n            ++i;\r\n            newVertices.push(vertex);\r\n        })\r\n\r\n        setVertices(newVertices);\r\n        straightenEdges();\r\n    }\r\n\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        if(updating) setUpdating(false);\r\n\r\n        const handleResize = () => setWidth(window.innerWidth);\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    \r\n    \r\n    }, [edges, bendPositions, window.innerWidth])\r\n\r\n    const getReturn = () => {\r\n        if(window.innerWidth > \"670\") {\r\n            return (\r\n                <div style={{overflow:\"auto\"}}>\r\n                    <Inputs setAddingVertex={setAddingVertex} straightenEdges={straightenEdges} addEdge={addEdge} setDeletingVertex={setDeletingVertex} deleteEdge={deleteEdgeTest}\r\n                                setGraph={setGraph} edges={edges} vertices={vertices} bendPositions={bendPositions}\r\n                                logIn={props.login} logOut={props.logout} loggedIn={props.loggedIn} centerGraph={centerGraph}\r\n                                addingVertex={addingVertex} deletingVertex={deletingVertex}\r\n                        />\r\n                    <div style={{display:\"flex\", height: '92vh', width:'94vw', marginLeft:\"3vw\", marginRight:\"3vw\", marginTop:\"3vh\", marginBottom:\"2.75vh\", overflow:\"hidden\"}} \r\n                        onClick={(e) => {tryAddVertex(e); setAddingVertex(false)}}>\r\n                        \r\n                        {updating ? <React.Fragment/> : <GraphVisual vertices={vertices} edges={edges} bendPositions={bendPositions} setVertices={setVertices} deletingVertex={deletingVertex}\r\n                                    setBendPositions={setBendPositions} onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}} deleteVertex={deleteVertex}/> }\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Error />\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            {getReturn()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useLocation, withRouter} from 'react-router-dom';\r\n\r\nfunction TokenPage(props) {\r\n    const [id, setID] = useState((useLocation().pathname).replace(\"/confirm_email/\", \"\"));\r\n    const [message, setMessage] = useState(\"Temp\");\r\n    const submit = (e) => {\r\n        fetch('https://graphtt.herokuapp.com/confirm_email/' + id, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                'token': id // change here\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json()).then(msg => login(msg))\r\n    }\r\n\r\n    const login = (msg) => {\r\n        setMessage(msg);\r\n\r\n        if(msg.status === \"Accepted\") {\r\n            props.login(msg.email);\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.loggedIn === true) {\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        } else {\r\n            submit();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <h1>\r\n            {message.status}\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Switch, HashRouter as Router, Route, Redirect} from 'react-router-dom';\r\nimport Data from '../display/data/Data';\r\nimport TokenPage from '../display/authtokens/TokenPage';\r\n\r\nexport default function Routes() {\r\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\r\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\r\n\r\n  const login = (email) => {\r\n    localStorage.setItem(\"loggedIn\", true);\r\n    localStorage.setItem(\"email\", email);\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"loggedIn\", false);\r\n    localStorage.removeItem(\"email\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"loggedIn\") == \"true\") {\r\n      setLoggedIn(true);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  \r\n  }, []);\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Data loggedIn={loggedIn} login={login} logout={logOut}/></Route>\r\n          <Route exact path=\"/confirm_email/:token\" component={() => <TokenPage loggedIn={loggedIn} login={login}/>}/>\r\n          <Route path='/'><Redirect to='/'/></Route>\r\n        </Switch>\r\n      </Router>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport Graph from './logic/graph/Graph'\r\nimport GraphVisual from './display/graphs/GraphVisual'\r\nimport { useEffect, useState } from 'react'\r\nimport { BFSCycle, BFSNoRepeat, BFSRepeat } from './logic/algorithms/BFS'\r\nimport Components from './logic/algorithms/Components'\r\nimport 'antd/dist/antd.css';\r\nimport Routes from './routing/Routes'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    \r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n          <title>Graph Theory Tool</title>\r\n        </Helmet>\r\n      <Routes/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*     let adj = [[0,1,0,1], [1,0,1,1], [0,1,0,1], [1,1,1,0]];\r\n    let graph = new Graph(adj);\r\n    let vertices = BFSCycle(graph, 0);\r\n\r\n    let k = new Components(graph);\r\n    console.log(k.getComponents());\r\n    console.log(k.getComponentCount()); */\r\n    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}